2025/02/08 04:01:49 routes.go:1259: INFO server config env="map[CUDA_VISIBLE_DEVICES:0 GPU_DEVICE_ORDINAL: HIP_VISIBLE_DEVICES: HSA_OVERRIDE_GFX_VERSION: HTTPS_PROXY: HTTP_PROXY: NO_PROXY: OLLAMA_DEBUG:false OLLAMA_FLASH_ATTENTION:false OLLAMA_GPU_OVERHEAD:0 OLLAMA_HOST:http://127.0.0.1:11434 OLLAMA_INTEL_GPU:false OLLAMA_KEEP_ALIVE:5m0s OLLAMA_KV_CACHE_TYPE: OLLAMA_LLM_LIBRARY: OLLAMA_LOAD_TIMEOUT:5m0s OLLAMA_MAX_LOADED_MODELS:0 OLLAMA_MAX_QUEUE:512 OLLAMA_MODELS:/scratch/gpfs/jx0800/models OLLAMA_MULTIUSER_CACHE:false OLLAMA_NOHISTORY:false OLLAMA_NOPRUNE:false OLLAMA_NUM_PARALLEL:0 OLLAMA_ORIGINS:[http://localhost https://localhost http://localhost:* https://localhost:* http://127.0.0.1 https://127.0.0.1 http://127.0.0.1:* https://127.0.0.1:* http://0.0.0.0 https://0.0.0.0 http://0.0.0.0:* https://0.0.0.0:* app://* file://* tauri://* vscode-webview://*] OLLAMA_SCHED_SPREAD:false ROCR_VISIBLE_DEVICES: http_proxy: https_proxy: no_proxy:]"
time=2025-02-08T04:01:49.269-05:00 level=INFO source=images.go:757 msg="total blobs: 18"
time=2025-02-08T04:01:49.269-05:00 level=INFO source=images.go:764 msg="total unused blobs removed: 0"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] POST   /api/pull                 --> github.com/ollama/ollama/server.(*Server).PullHandler-fm (5 handlers)
[GIN-debug] POST   /api/generate             --> github.com/ollama/ollama/server.(*Server).GenerateHandler-fm (5 handlers)
[GIN-debug] POST   /api/chat                 --> github.com/ollama/ollama/server.(*Server).ChatHandler-fm (5 handlers)
[GIN-debug] POST   /api/embed                --> github.com/ollama/ollama/server.(*Server).EmbedHandler-fm (5 handlers)
[GIN-debug] POST   /api/embeddings           --> github.com/ollama/ollama/server.(*Server).EmbeddingsHandler-fm (5 handlers)
[GIN-debug] POST   /api/create               --> github.com/ollama/ollama/server.(*Server).CreateHandler-fm (5 handlers)
[GIN-debug] POST   /api/push                 --> github.com/ollama/ollama/server.(*Server).PushHandler-fm (5 handlers)
[GIN-debug] POST   /api/copy                 --> github.com/ollama/ollama/server.(*Server).CopyHandler-fm (5 handlers)
[GIN-debug] DELETE /api/delete               --> github.com/ollama/ollama/server.(*Server).DeleteHandler-fm (5 handlers)
[GIN-debug] POST   /api/show                 --> github.com/ollama/ollama/server.(*Server).ShowHandler-fm (5 handlers)
[GIN-debug] POST   /api/blobs/:digest        --> github.com/ollama/ollama/server.(*Server).CreateBlobHandler-fm (5 handlers)
[GIN-debug] HEAD   /api/blobs/:digest        --> github.com/ollama/ollama/server.(*Server).HeadBlobHandler-fm (5 handlers)
[GIN-debug] GET    /api/ps                   --> github.com/ollama/ollama/server.(*Server).PsHandler-fm (5 handlers)
[GIN-debug] POST   /v1/chat/completions      --> github.com/ollama/ollama/server.(*Server).ChatHandler-fm (6 handlers)
[GIN-debug] POST   /v1/completions           --> github.com/ollama/ollama/server.(*Server).GenerateHandler-fm (6 handlers)
[GIN-debug] POST   /v1/embeddings            --> github.com/ollama/ollama/server.(*Server).EmbedHandler-fm (6 handlers)
[GIN-debug] GET    /v1/models                --> github.com/ollama/ollama/server.(*Server).ListHandler-fm (6 handlers)
[GIN-debug] GET    /v1/models/:model         --> github.com/ollama/ollama/server.(*Server).ShowHandler-fm (6 handlers)
[GIN-debug] GET    /                         --> github.com/ollama/ollama/server.(*Server).GenerateRoutes.func1 (5 handlers)
[GIN-debug] GET    /api/tags                 --> github.com/ollama/ollama/server.(*Server).ListHandler-fm (5 handlers)
[GIN-debug] GET    /api/version              --> github.com/ollama/ollama/server.(*Server).GenerateRoutes.func2 (5 handlers)
[GIN-debug] HEAD   /                         --> github.com/ollama/ollama/server.(*Server).GenerateRoutes.func1 (5 handlers)
[GIN-debug] HEAD   /api/tags                 --> github.com/ollama/ollama/server.(*Server).ListHandler-fm (5 handlers)
[GIN-debug] HEAD   /api/version              --> github.com/ollama/ollama/server.(*Server).GenerateRoutes.func2 (5 handlers)
time=2025-02-08T04:01:49.269-05:00 level=INFO source=routes.go:1310 msg="Listening on 127.0.0.1:11434 (version 0.5.4)"
time=2025-02-08T04:01:49.280-05:00 level=INFO source=routes.go:1339 msg="Dynamic LLM libraries" runners="[cpu_avx2 cuda_v11_avx cuda_v12_avx rocm_avx cpu cpu_avx]"
time=2025-02-08T04:01:49.280-05:00 level=INFO source=gpu.go:226 msg="looking for compatible GPUs"
time=2025-02-08T04:01:49.683-05:00 level=INFO source=types.go:131 msg="inference compute" id=GPU-9f2d8c49-eaf3-4582-f197-5eecdf58b84c library=cuda variant=v12 compute=8.0 driver=12.6 name="NVIDIA A100 80GB PCIe" total="79.3 GiB" available="78.8 GiB"
time=2025-02-08T04:01:51.352-05:00 level=INFO source=sched.go:714 msg="new model will fit in available VRAM in single GPU, loading" model=/scratch/gpfs/jx0800/models/blobs/sha256-970aa74c0a90ef7482477cf803618e776e173c007bf957f635f1015bfcfef0e6 gpu=GPU-9f2d8c49-eaf3-4582-f197-5eecdf58b84c parallel=1 available=84654424064 required="809.9 MiB"
time=2025-02-08T04:01:51.618-05:00 level=INFO source=server.go:104 msg="system memory" total="1006.8 GiB" free="977.4 GiB" free_swap="2.0 GiB"
time=2025-02-08T04:01:51.618-05:00 level=INFO source=memory.go:356 msg="offload to cuda" layers.requested=-1 layers.model=13 layers.offload=13 layers.split="" memory.available="[78.8 GiB]" memory.gpu_overhead="0 B" memory.required.full="809.9 MiB" memory.required.partial="809.9 MiB" memory.required.kv="24.0 MiB" memory.required.allocations="[809.9 MiB]" memory.weights.total="240.1 MiB" memory.weights.repeating="195.4 MiB" memory.weights.nonrepeating="44.7 MiB" memory.graph.full="48.0 MiB" memory.graph.partial="48.0 MiB"
time=2025-02-08T04:01:51.620-05:00 level=INFO source=server.go:376 msg="starting llama server" cmd="/home/jx0800/.local/lib/ollama/runners/cuda_v12_avx/ollama_llama_server runner --model /scratch/gpfs/jx0800/models/blobs/sha256-970aa74c0a90ef7482477cf803618e776e173c007bf957f635f1015bfcfef0e6 --ctx-size 8192 --batch-size 512 --n-gpu-layers 13 --threads 48 --parallel 1 --port 38053"
time=2025-02-08T04:01:51.620-05:00 level=INFO source=sched.go:449 msg="loaded runners" count=1
time=2025-02-08T04:01:51.620-05:00 level=INFO source=server.go:555 msg="waiting for llama runner to start responding"
time=2025-02-08T04:01:51.621-05:00 level=INFO source=server.go:589 msg="waiting for server to become available" status="llm server error"
time=2025-02-08T04:01:51.643-05:00 level=INFO source=runner.go:945 msg="starting go runner"
ggml_cuda_init: GGML_CUDA_FORCE_MMQ:    no
ggml_cuda_init: GGML_CUDA_FORCE_CUBLAS: no
ggml_cuda_init: found 1 CUDA devices:
  Device 0: NVIDIA A100 80GB PCIe, compute capability 8.0, VMM: yes
time=2025-02-08T04:01:51.671-05:00 level=INFO source=runner.go:946 msg=system info="CUDA : ARCHS = 600,610,620,700,720,750,800,860,870,890,900 | USE_GRAPHS = 1 | PEER_MAX_BATCH_SIZE = 128 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | cgo(gcc)" threads=48
time=2025-02-08T04:01:51.671-05:00 level=INFO source=.:0 msg="Server listening on 127.0.0.1:38053"
llama_load_model_from_file: using device CUDA0 (NVIDIA A100 80GB PCIe) - 80732 MiB free
llama_model_loader: loaded meta data with 24 key-value pairs and 112 tensors from /scratch/gpfs/jx0800/models/blobs/sha256-970aa74c0a90ef7482477cf803618e776e173c007bf957f635f1015bfcfef0e6 (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = nomic-bert
llama_model_loader: - kv   1:                               general.name str              = nomic-embed-text-v1.5
llama_model_loader: - kv   2:                     nomic-bert.block_count u32              = 12
llama_model_loader: - kv   3:                  nomic-bert.context_length u32              = 2048
llama_model_loader: - kv   4:                nomic-bert.embedding_length u32              = 768
llama_model_loader: - kv   5:             nomic-bert.feed_forward_length u32              = 3072
llama_model_loader: - kv   6:            nomic-bert.attention.head_count u32              = 12
llama_model_loader: - kv   7:    nomic-bert.attention.layer_norm_epsilon f32              = 0.000000
llama_model_loader: - kv   8:                          general.file_type u32              = 1
llama_model_loader: - kv   9:                nomic-bert.attention.causal bool             = false
llama_model_loader: - kv  10:                    nomic-bert.pooling_type u32              = 1
llama_model_loader: - kv  11:                  nomic-bert.rope.freq_base f32              = 1000.000000
llama_model_loader: - kv  12:            tokenizer.ggml.token_type_count u32              = 2
llama_model_loader: - kv  13:                tokenizer.ggml.bos_token_id u32              = 101
llama_model_loader: - kv  14:                tokenizer.ggml.eos_token_id u32              = 102
llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
llama_model_loader: - kv  16:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
llama_model_loader: - kv  17:                      tokenizer.ggml.scores arr[f32,30522]   = [-1000.000000, -1000.000000, -1000.00...
llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
llama_model_loader: - type  f32:   51 tensors
llama_model_loader: - type  f16:   61 tensors
llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
llm_load_vocab: special tokens cache size = 5
llm_load_vocab: token to piece cache size = 0.2032 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = nomic-bert
llm_load_print_meta: vocab type       = WPM
llm_load_print_meta: n_vocab          = 30522
llm_load_print_meta: n_merges         = 0
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 768
llm_load_print_meta: n_layer          = 12
llm_load_print_meta: n_head           = 12
llm_load_print_meta: n_head_kv        = 12
llm_load_print_meta: n_rot            = 64
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 64
llm_load_print_meta: n_embd_head_v    = 64
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 768
llm_load_print_meta: n_embd_v_gqa     = 768
llm_load_print_meta: f_norm_eps       = 1.0e-12
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 3072
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 0
llm_load_print_meta: pooling type     = 1
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 1000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 137M
llm_load_print_meta: model ftype      = F16
llm_load_print_meta: model params     = 136.73 M
llm_load_print_meta: model size       = 260.86 MiB (16.00 BPW) 
llm_load_print_meta: general.name     = nomic-embed-text-v1.5
llm_load_print_meta: BOS token        = 101 '[CLS]'
llm_load_print_meta: EOS token        = 102 '[SEP]'
llm_load_print_meta: UNK token        = 100 '[UNK]'
llm_load_print_meta: SEP token        = 102 '[SEP]'
llm_load_print_meta: PAD token        = 0 '[PAD]'
llm_load_print_meta: CLS token        = 101 '[CLS]'
llm_load_print_meta: MASK token       = 103 '[MASK]'
llm_load_print_meta: LF token         = 0 '[PAD]'
llm_load_print_meta: EOG token        = 102 '[SEP]'
llm_load_print_meta: max token length = 21
time=2025-02-08T04:01:51.872-05:00 level=INFO source=server.go:589 msg="waiting for server to become available" status="llm server loading model"
llm_load_tensors: offloading 12 repeating layers to GPU
llm_load_tensors: offloading output layer to GPU
llm_load_tensors: offloaded 13/13 layers to GPU
llm_load_tensors:        CUDA0 model buffer size =   216.14 MiB
llm_load_tensors:   CPU_Mapped model buffer size =    44.72 MiB
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 8192
llama_new_context_with_model: n_ctx_per_seq = 8192
llama_new_context_with_model: n_batch       = 512
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 1000.0
llama_new_context_with_model: freq_scale    = 1
llama_new_context_with_model: n_ctx_pre_seq (8192) > n_ctx_train (2048) -- possible training context overflow
llama_kv_cache_init:      CUDA0 KV buffer size =   288.00 MiB
llama_new_context_with_model: KV self size  =  288.00 MiB, K (f16):  144.00 MiB, V (f16):  144.00 MiB
llama_new_context_with_model:  CUDA_Host  output buffer size =     0.00 MiB
llama_new_context_with_model:      CUDA0 compute buffer size =    23.50 MiB
llama_new_context_with_model:  CUDA_Host compute buffer size =     3.50 MiB
llama_new_context_with_model: graph nodes  = 453
llama_new_context_with_model: graph splits = 4 (with bs=512), 2 (with bs=1)
time=2025-02-08T04:01:52.123-05:00 level=INFO source=server.go:594 msg="llama runner started in 0.50 seconds"
[GIN] 2025/02/08 - 04:01:52 | 200 |  983.584808ms |       127.0.0.1 | POST     "/api/embeddings"


config_path: /scratch/gpfs/jx0800/data/graphrag/settings.yaml
streaming:  False

INFO: Vector Store Args: {
    "output": {
        "type": "lancedb",
        "db_uri": "/scratch/gpfs/jx0800/data/graphrag/output/lancedb",
        "url": null,
        "audience": null,
        "container_name": "==== REDACTED ====",
        "database_name": null,
        "overwrite": true
    }
}
creating llm client with {'api_key': 'REDACTED,len=515', 'azure_auth_type': None, 'type': "openai_chat", 'model': 'llama3.2:3b', 'encoding_model': 'cl100k_base', 'max_tokens': 20000, 'temperature': 0.6, 'top_p': 0.9, 'n': 1, 'frequency_penalty': 0.0, 'presence_penalty': 0.0, 'request_timeout': 180.0, 'api_base': 'http://localhost:11434/v1', 'api_version': None, 'deployment_name': None, 'organization': None, 'proxy': None, 'audience': None, 'model_supports_json': True, 'tokens_per_minute': 50000, 'requests_per_minute': 1000, 'max_retries': 10, 'max_retry_wait': 10.0, 'sleep_on_rate_limit_recommendation': True, 'concurrent_requests': 25, 'responses': None, 'parallelization_stagger': 0.3, 'parallelization_num_threads': 50, 'async_mode': <AsyncType.Threaded: 'threaded'>}
creating embedding llm client with {'api_key': 'REDACTED,len=515', 'azure_auth_type': None, 'type': "openai_embedding", 'model': 'nomic-embed-text', 'encoding_model': 'cl100k_base', 'max_tokens': 20000, 'temperature': 0.6, 'top_p': 0.9, 'n': 1, 'frequency_penalty': 0.0, 'presence_penalty': 0.0, 'request_timeout': 180.0, 'api_base': 'http://localhost:11434/api', 'api_version': None, 'deployment_name': None, 'organization': None, 'proxy': None, 'audience': None, 'model_supports_json': None, 'tokens_per_minute': 50000, 'requests_per_minute': 1000, 'max_retries': 10, 'max_retry_wait': 10.0, 'sleep_on_rate_limit_recommendation': True, 'concurrent_requests': 25, 'responses': None, 'parallelization_stagger': 0.3, 'parallelization_num_threads': 50, 'async_mode': <AsyncType.Threaded: 'threaded'>}
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /home/jx0800/graphrag/graphrag/cli/main.py:437 in _query_cli                 │
│                                                                              │
│   434 │                                                                      │
│   435 │   match method:                                                      │
│   436 │   │   case SearchType.LOCAL:                                         │
│ ❱ 437 │   │   │   run_local_search(                                          │
│   438 │   │   │   │   config_filepath=config,                                │
│   439 │   │   │   │   data_dir=data,                                         │
│   440 │   │   │   │   root_dir=root,                                         │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │             community_level = 2                                          │ │
│ │                      config = None                                       │ │
│ │                        data = None                                       │ │
│ │ dynamic_community_selection = False                                      │ │
│ │                      method = <SearchType.LOCAL: 'local'>                │ │
│ │                       query = "What's the difference between CNN and     │ │
│ │                               GNN? Concluse the pros and cons."          │ │
│ │               response_type = 'Multiple Paragraphs'                      │ │
│ │                        root = PosixPath('/scratch/gpfs/jx0800/data/grap… │ │
│ │                   streaming = False                                      │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/cli/query.py:182 in run_local_search          │
│                                                                              │
│   179 │   │                                                                  │
│   180 │   │   return asyncio.run(run_streaming_search())                     │
│   181 │   # not streaming                                                    │
│ ❱ 182 │   response, context_data = asyncio.run(                              │
│   183 │   │   api.local_search(                                              │
│   184 │   │   │   config=config,                                             │
│   185 │   │   │   nodes=final_nodes,                                         │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │           cli_overrides = {}                                             │ │
│ │         community_level = 2                                              │ │
│ │                  config = GraphRagConfig(                                │ │
│ │                           │                                              │ │
│ │                           root_dir='/scratch/gpfs/jx0800/data/graphrag', │ │
│ │                           │   models={                                   │ │
│ │                           │   │   'default_chat_model':                  │ │
│ │                           LanguageModelConfig(                           │ │
│ │                           │   │   │                                      │ │
│ │                           api_key='eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6SXJW… │ │
│ │                           │   │   │   azure_auth_type=None,              │ │
│ │                           │   │   │   type="openai_chat",                │ │
│ │                           │   │   │   model='llama3.2:3b',               │ │
│ │                           │   │   │   encoding_model='cl100k_base',      │ │
│ │                           │   │   │   max_tokens=20000,                  │ │
│ │                           │   │   │   temperature=0.6,                   │ │
│ │                           │   │   │   top_p=0.9,                         │ │
│ │                           │   │   │   n=1,                               │ │
│ │                           │   │   │   frequency_penalty=0.0,             │ │
│ │                           │   │   │   presence_penalty=0.0,              │ │
│ │                           │   │   │   request_timeout=180.0,             │ │
│ │                           │   │   │                                      │ │
│ │                           api_base='http://localhost:11434/v1',          │ │
│ │                           │   │   │   api_version=None,                  │ │
│ │                           │   │   │   deployment_name=None,              │ │
│ │                           │   │   │   organization=None,                 │ │
│ │                           │   │   │   proxy=None,                        │ │
│ │                           │   │   │   audience=None,                     │ │
│ │                           │   │   │   model_supports_json=True,          │ │
│ │                           │   │   │   tokens_per_minute=50000,           │ │
│ │                           │   │   │   requests_per_minute=1000,          │ │
│ │                           │   │   │   max_retries=10,                    │ │
│ │                           │   │   │   max_retry_wait=10.0,               │ │
│ │                           │   │   │                                      │ │
│ │                           sleep_on_rate_limit_recommendation=True,       │ │
│ │                           │   │   │   concurrent_requests=25,            │ │
│ │                           │   │   │   responses=None,                    │ │
│ │                           │   │   │   parallelization_stagger=0.3,       │ │
│ │                           │   │   │   parallelization_num_threads=50,    │ │
│ │                           │   │   │   async_mode=<AsyncType.Threaded:    │ │
│ │                           'threaded'>                                    │ │
│ │                           │   │   ),                                     │ │
│ │                           │   │   'default_embedding_model':             │ │
│ │                           LanguageModelConfig(                           │ │
│ │                           │   │   │                                      │ │
│ │                           api_key='eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6SXJW… │ │
│ │                           │   │   │   azure_auth_type=None,              │ │
│ │                           │   │   │   type="openai_embedding",           │ │
│ │                           │   │   │   model='nomic-embed-text',          │ │
│ │                           │   │   │   encoding_model='cl100k_base',      │ │
│ │                           │   │   │   max_tokens=20000,                  │ │
│ │                           │   │   │   temperature=0.6,                   │ │
│ │                           │   │   │   top_p=0.9,                         │ │
│ │                           │   │   │   n=1,                               │ │
│ │                           │   │   │   frequency_penalty=0.0,             │ │
│ │                           │   │   │   presence_penalty=0.0,              │ │
│ │                           │   │   │   request_timeout=180.0,             │ │
│ │                           │   │   │                                      │ │
│ │                           api_base='http://localhost:11434/api',         │ │
│ │                           │   │   │   api_version=None,                  │ │
│ │                           │   │   │   deployment_name=None,              │ │
│ │                           │   │   │   organization=None,                 │ │
│ │                           │   │   │   proxy=None,                        │ │
│ │                           │   │   │   audience=None,                     │ │
│ │                           │   │   │   model_supports_json=None,          │ │
│ │                           │   │   │   tokens_per_minute=50000,           │ │
│ │                           │   │   │   requests_per_minute=1000,          │ │
│ │                           │   │   │   max_retries=10,                    │ │
│ │                           │   │   │   max_retry_wait=10.0,               │ │
│ │                           │   │   │                                      │ │
│ │                           sleep_on_rate_limit_recommendation=True,       │ │
│ │                           │   │   │   concurrent_requests=25,            │ │
│ │                           │   │   │   responses=None,                    │ │
│ │                           │   │   │   parallelization_stagger=0.3,       │ │
│ │                           │   │   │   parallelization_num_threads=50,    │ │
│ │                           │   │   │   async_mode=<AsyncType.Threaded:    │ │
│ │                           'threaded'>                                    │ │
│ │                           │   │   )                                      │ │
│ │                           │   },                                         │ │
│ │                           │   reporting=ReportingConfig(                 │ │
│ │                           │   │   type="file",                           │ │
│ │                           │   │                                          │ │
│ │                           base_dir='/scratch/gpfs/jx0800/data/graphrag/… │ │
│ │                           │   │   connection_string=None,                │ │
│ │                           │   │   container_name=None,                   │ │
│ │                           │   │   storage_account_blob_url=None          │ │
│ │                           │   ),                                         │ │
│ │                           │   output=OutputConfig(                       │ │
│ │                           │   │   type="file",                           │ │
│ │                           │   │                                          │ │
│ │                           base_dir='/scratch/gpfs/jx0800/data/graphrag/… │ │
│ │                           │   │   connection_string=None,                │ │
│ │                           │   │   container_name=None,                   │ │
│ │                           │   │   storage_account_blob_url=None,         │ │
│ │                           │   │   cosmosdb_account_url=None              │ │
│ │                           │   ),                                         │ │
│ │                           │   update_index_output=None,                  │ │
│ │                           │   cache=CacheConfig(                         │ │
│ │                           │   │   type="file",                           │ │
│ │                           │   │   base_dir='cache',                      │ │
│ │                           │   │   connection_string=None,                │ │
│ │                           │   │   container_name=None,                   │ │
│ │                           │   │   storage_account_blob_url=None,         │ │
│ │                           │   │   cosmosdb_account_url=None              │ │
│ │                           │   ),                                         │ │
│ │                           │   input=InputConfig(                         │ │
│ │                           │   │   type="file",                           │ │
│ │                           │   │   file_type="text",                      │ │
│ │                           │   │   base_dir='input',                      │ │
│ │                           │   │   connection_string=None,                │ │
│ │                           │   │   storage_account_blob_url=None,         │ │
│ │                           │   │   container_name=None,                   │ │
│ │                           │   │   encoding='utf-8',                      │ │
│ │                           │   │   file_pattern='.*\\.txt$',              │ │
│ │                           │   │   file_filter=None,                      │ │
│ │                           │   │   source_column=None,                    │ │
│ │                           │   │   timestamp_column=None,                 │ │
│ │                           │   │   timestamp_format=None,                 │ │
│ │                           │   │   text_column='text',                    │ │
│ │                           │   │   title_column=None,                     │ │
│ │                           │   │   document_attribute_columns=[]          │ │
│ │                           │   ),                                         │ │
│ │                           │   embed_graph=EmbedGraphConfig(              │ │
│ │                           │   │   enabled=False,                         │ │
│ │                           │   │   dimensions=1536,                       │ │
│ │                           │   │   num_walks=10,                          │ │
│ │                           │   │   walk_length=40,                        │ │
│ │                           │   │   window_size=2,                         │ │
│ │                           │   │   iterations=3,                          │ │
│ │                           │   │   random_seed=597832,                    │ │
│ │                           │   │   use_lcc=True                           │ │
│ │                           │   ),                                         │ │
│ │                           │   embeddings=TextEmbeddingConfig(            │ │
│ │                           │   │   batch_size=16,                         │ │
│ │                           │   │   batch_max_tokens=8191,                 │ │
│ │                           │   │   target="required",                     │ │
│ │                           │   │   names=[],                              │ │
│ │                           │   │   strategy=None,                         │ │
│ │                           │   │   model_id='default_embedding_model'     │ │
│ │                           │   ),                                         │ │
│ │                           │   chunks=ChunkingConfig(                     │ │
│ │                           │   │   size=1200,                             │ │
│ │                           │   │   overlap=100,                           │ │
│ │                           │   │   group_by_columns=['id'],               │ │
│ │                           │   │   strategy="tokens",                     │ │
│ │                           │   │   encoding_model='cl100k_base'           │ │
│ │                           │   ),                                         │ │
│ │                           │   snapshots=SnapshotsConfig(                 │ │
│ │                           │   │   embeddings=False,                      │ │
│ │                           │   │   graphml=False,                         │ │
│ │                           │   │   transient=False                        │ │
│ │                           │   ),                                         │ │
│ │                           │   entity_extraction=EntityExtractionConfig(  │ │
│ │                           │   │                                          │ │
│ │                           prompt='prompts/entity_extraction.txt',        │ │
│ │                           │   │   entity_types=[                         │ │
│ │                           │   │   │   'organization',                    │ │
│ │                           │   │   │   'person',                          │ │
│ │                           │   │   │   'geo',                             │ │
│ │                           │   │   │   'event'                            │ │
│ │                           │   │   ],                                     │ │
│ │                           │   │   max_gleanings=1,                       │ │
│ │                           │   │   strategy=None,                         │ │
│ │                           │   │   encoding_model=None,                   │ │
│ │                           │   │   model_id='default_chat_model'          │ │
│ │                           │   ),                                         │ │
│ │                           │                                              │ │
│ │                           summarize_descriptions=SummarizeDescriptionsC… │ │
│ │                           │   │                                          │ │
│ │                           prompt='prompts/summarize_descriptions.txt',   │ │
│ │                           │   │   max_length=500,                        │ │
│ │                           │   │   strategy=None,                         │ │
│ │                           │   │   model_id='default_chat_model'          │ │
│ │                           │   ),                                         │ │
│ │                           │   community_reports=CommunityReportsConfig(  │ │
│ │                           │   │   prompt='prompts/community_report.txt', │ │
│ │                           │   │   max_length=2000,                       │ │
│ │                           │   │   max_input_length=8000,                 │ │
│ │                           │   │   strategy=None,                         │ │
│ │                           │   │   model_id='default_chat_model'          │ │
│ │                           │   ),                                         │ │
│ │                           │   claim_extraction=ClaimExtractionConfig(    │ │
│ │                           │   │   enabled=False,                         │ │
│ │                           │   │   prompt='prompts/claim_extraction.txt', │ │
│ │                           │   │   description='Any claims or facts that  │ │
│ │                           could be relevant to information discovery.',  │ │
│ │                           │   │   max_gleanings=1,                       │ │
│ │                           │   │   strategy=None,                         │ │
│ │                           │   │   encoding_model=None,                   │ │
│ │                           │   │   model_id='default_chat_model'          │ │
│ │                           │   ),                                         │ │
│ │                           │   cluster_graph=ClusterGraphConfig(          │ │
│ │                           │   │   max_cluster_size=10,                   │ │
│ │                           │   │   use_lcc=True,                          │ │
│ │                           │   │   seed=3735928559                        │ │
│ │                           │   ),                                         │ │
│ │                           │   umap=UmapConfig(enabled=False),            │ │
│ │                           │   local_search=LocalSearchConfig(            │ │
│ │                           │   │                                          │ │
│ │                           prompt='prompts/local_search_system_prompt.tx… │ │
│ │                           │   │   text_unit_prop=0.5,                    │ │
│ │                           │   │   community_prop=0.15,                   │ │
│ │                           │   │   conversation_history_max_turns=5,      │ │
│ │                           │   │   top_k_entities=10,                     │ │
│ │                           │   │   top_k_relationships=10,                │ │
│ │                           │   │   temperature=0.6,                       │ │
│ │                           │   │   top_p=0.9,                             │ │
│ │                           │   │   n=1,                                   │ │
│ │                           │   │   max_tokens=20000,                      │ │
│ │                           │   │   llm_max_tokens=20000                   │ │
│ │                           │   ),                                         │ │
│ │                           │   global_search=GlobalSearchConfig(          │ │
│ │                           │   │                                          │ │
│ │                           map_prompt='prompts/global_search_map_system_… │ │
│ │                           │   │                                          │ │
│ │                           reduce_prompt='prompts/global_search_reduce_s… │ │
│ │                           │   │                                          │ │
│ │                           knowledge_prompt='prompts/global_search_knowl… │ │
│ │                           │   │   temperature=0,                         │ │
│ │                           │   │   top_p=1,                               │ │
│ │                           │   │   n=1,                                   │ │
│ │                           │   │   max_tokens=12000,                      │ │
│ │                           │   │   data_max_tokens=12000,                 │ │
│ │                           │   │   map_max_tokens=1000,                   │ │
│ │                           │   │   reduce_max_tokens=2000,                │ │
│ │                           │   │   concurrency=32,                        │ │
│ │                           │   │   dynamic_search_llm='gpt-4o-mini',      │ │
│ │                           │   │   dynamic_search_threshold=1,            │ │
│ │                           │   │   dynamic_search_keep_parent=False,      │ │
│ │                           │   │   dynamic_search_num_repeats=1,          │ │
│ │                           │   │   dynamic_search_use_summary=False,      │ │
│ │                           │   │                                          │ │
│ │                           dynamic_search_concurrent_coroutines=16,       │ │
│ │                           │   │   dynamic_search_max_level=2             │ │
│ │                           │   ),                                         │ │
│ │                           │   drift_search=DRIFTSearchConfig(            │ │
│ │                           │   │                                          │ │
│ │                           prompt='prompts/drift_search_system_prompt.tx… │ │
│ │                           │   │                                          │ │
│ │                           reduce_prompt='prompts/drift_search_reduce_pr… │ │
│ │                           │   │   temperature=0,                         │ │
│ │                           │   │   top_p=1,                               │ │
│ │                           │   │   n=3,                                   │ │
│ │                           │   │   max_tokens=12000,                      │ │
│ │                           │   │   data_max_tokens=12000,                 │ │
│ │                           │   │   reduce_max_tokens=2000,                │ │
│ │                           │   │   reduce_temperature=0,                  │ │
│ │                           │   │   concurrency=32,                        │ │
│ │                           │   │   drift_k_followups=20,                  │ │
│ │                           │   │   primer_folds=5,                        │ │
│ │                           │   │   primer_llm_max_tokens=12000,           │ │
│ │                           │   │   n_depth=3,                             │ │
│ │                           │   │   local_search_text_unit_prop=0.9,       │ │
│ │                           │   │   local_search_community_prop=0.1,       │ │
│ │                           │   │   local_search_top_k_mapped_entities=10, │ │
│ │                           │   │   local_search_top_k_relationships=10,   │ │
│ │                           │   │   local_search_max_data_tokens=12000,    │ │
│ │                           │   │   local_search_temperature=0,            │ │
│ │                           │   │   local_search_top_p=1,                  │ │
│ │                           │   │   local_search_n=1,                      │ │
│ │                           │   │   local_search_llm_max_gen_tokens=2000   │ │
│ │                           │   ),                                         │ │
│ │                           │   basic_search=BasicSearchConfig(            │ │
│ │                           │   │                                          │ │
│ │                           prompt='prompts/basic_search_system_prompt.tx… │ │
│ │                           │   │   text_unit_prop=0.5,                    │ │
│ │                           │   │   conversation_history_max_turns=5,      │ │
│ │                           │   │   temperature=0,                         │ │
│ │                           │   │   top_p=1,                               │ │
│ │                           │   │   n=1,                                   │ │
│ │                           │   │   max_tokens=12000,                      │ │
│ │                           │   │   llm_max_tokens=2000                    │ │
│ │                           │   ),                                         │ │
│ │                           │   vector_store={                             │ │
│ │                           │   │   'output': VectorStoreConfig(           │ │
│ │                           │   │   │   type='lancedb',                    │ │
│ │                           │   │   │                                      │ │
│ │                           db_uri='/scratch/gpfs/jx0800/data/graphrag/ou… │ │
│ │                           │   │   │   url=None,                          │ │
│ │                           │   │   │   api_key=None,                      │ │
│ │                           │   │   │   audience=None,                     │ │
│ │                           │   │   │   container_name='default',          │ │
│ │                           │   │   │   database_name=None,                │ │
│ │                           │   │   │   overwrite=True                     │ │
│ │                           │   │   )                                      │ │
│ │                           │   }                                          │ │
│ │                           )                                              │ │
│ │         config_filepath = None                                           │ │
│ │                data_dir = None                                           │ │
│ │          dataframe_dict = {                                              │ │
│ │                           │   'create_final_nodes':                      │ │
│ │                           id  human_readable_id  ...  x  y               │ │
│ │                           0    361d38e8-a81c-43bf-a292-0cf59164fcfe      │ │
│ │                           0  ...  0  0                                   │ │
│ │                           1    361d38e8-a81c-43bf-a292-0cf59164fcfe      │ │
│ │                           0  ...  0  0                                   │ │
│ │                           2    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d      │ │
│ │                           1  ...  0  0                                   │ │
│ │                           3    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d      │ │
│ │                           1  ...  0  0                                   │ │
│ │                           4    33dce321-f4d6-451b-93a0-facff7bd4cfc      │ │
│ │                           2  ...  0  0                                   │ │
│ │                           ..                                    ...      │ │
│ │                           ...  ... .. ..                                 │ │
│ │                           113  8578ccd8-76f7-4dd5-aefc-e9502499d5ee      │ │
│ │                           73  ...  0  0                                  │ │
│ │                           114  73903f34-7e8a-41c4-853e-b43359f25b82      │ │
│ │                           74  ...  0  0                                  │ │
│ │                           115  ba65496d-ddb1-4d08-a203-4691b4c7cc65      │ │
│ │                           75  ...  0  0                                  │ │
│ │                           116  b20370ae-854f-4781-b6e9-564adb5e75bb      │ │
│ │                           76  ...  0  0                                  │ │
│ │                           117  f3b34144-c8b6-4780-aee2-2ff729c2f05c      │ │
│ │                           77  ...  0  0                                  │ │
│ │                                                                          │ │
│ │                           [118 rows x 8 columns],                        │ │
│ │                           │   'create_final_community_reports':          │ │
│ │                           id  human_readable_id  ...      period  size   │ │
│ │                           0  edf604d62cc7486cb9dc1f3b62a1b613            │ │
│ │                           5  ...  2025-01-28    19                       │ │
│ │                           1  f428381efac24e028b01b86d6dbf1a63            │ │
│ │                           6  ...  2025-01-28     2                       │ │
│ │                           2  f6b7e995c6514905a1743e28004cd6c4            │ │
│ │                           7  ...  2025-01-28    17                       │ │
│ │                           3  255e5acc15d84fa7b72aa2a62f3d1106            │ │
│ │                           8  ...  2025-01-28     2                       │ │
│ │                           4  0a68b27dcf2c48568c408cd4fdb36ff2            │ │
│ │                           0  ...  2025-01-28    13                       │ │
│ │                           5  87ab2281a26f4425a4fa5ef7d6ff90e7            │ │
│ │                           1  ...  2025-01-28    16                       │ │
│ │                           6  c9e6911cbdf8411eb4f18bdb27e1042d            │ │
│ │                           2  ...  2025-01-28    21                       │ │
│ │                           7  cb9e029c75524fa294516f922767dfc4            │ │
│ │                           3  ...  2025-01-28    19                       │ │
│ │                           8  e535ae20b1324dba8a7917d85ebb1ca6            │ │
│ │                           4  ...  2025-01-28     3                       │ │
│ │                                                                          │ │
│ │                           [9 rows x 14 columns],                         │ │
│ │                           │   'create_final_text_units':                 │ │
│ │                           id  ...                                        │ │
│ │                           relationship_ids                               │ │
│ │                           0                                              │ │
│ │                           e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30… │ │
│ │                           ...  [30bda342-2449-47b2-ad1d-01db21aeafe3,    │ │
│ │                           b1d6d5a...                                     │ │
│ │                           1                                              │ │
│ │                           826236e9b53b61f612c6be568d84689b52b02eaab6761… │ │
│ │                           ...  [4afb894f-4bbb-40f1-8611-670ef3325b4f,    │ │
│ │                           2551005...                                     │ │
│ │                           2                                              │ │
│ │                           bcfc6a23d78c876f7cc226f911e6ce8375526d89093e8… │ │
│ │                           ...  [7c8977e4-ad87-4db9-b790-edfd3bd9dd3a,    │ │
│ │                           224194a...                                     │ │
│ │                           3                                              │ │
│ │                           332527ce3f7779776fcfae343ec912a32806bb50e27d7… │ │
│ │                           ...  [aa46818b-6b8a-43ec-8e63-2a29b0a1fbc0,    │ │
│ │                           3c85ae8...                                     │ │
│ │                                                                          │ │
│ │                           [4 rows x 7 columns],                          │ │
│ │                           │   'create_final_relationships':              │ │
│ │                           id  ...                                        │ │
│ │                           text_unit_ids                                  │ │
│ │                           0   30bda342-2449-47b2-ad1d-01db21aeafe3  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           1   b1d6d5ae-3b60-4297-9642-a721f9c2fb8c  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           2   f3089407-a992-4bf2-bf54-a9ce82eddd82  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           3   b1ada996-01bd-41fa-9c5e-9023b0e4651e  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           4   596f1d62-9cdd-4aa2-8d11-0cbe2cae39e3  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           ..                                   ...  ...  │ │
│ │                           ...                                            │ │
│ │                           81  165ef284-3ac5-4b2c-82eb-5edddb988f48  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           82  ddc4b38f-59cc-4982-85e3-88d9fbaa06a5  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           83  c08d0886-947f-4923-91cc-92c29dfd4208  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           84  2b3f689d-a803-4a03-a775-71d6eb93c5c7  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           85  33d7767e-e7be-42ac-8d4d-4b750cb07e9d  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                                                                          │ │
│ │                           [86 rows x 8 columns],                         │ │
│ │                           │   'create_final_entities':                   │ │
│ │                           id  ...                                        │ │
│ │                           text_unit_ids                                  │ │
│ │                           0   361d38e8-a81c-43bf-a292-0cf59164fcfe  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           1   5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           2   33dce321-f4d6-451b-93a0-facff7bd4cfc  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           3   90a196a9-af02-4818-8d48-31dd069776e9  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           4   69d3cde4-21d5-4aa7-b499-52ceffabb3fd  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           ..                                   ...  ...  │ │
│ │                           ...                                            │ │
│ │                           73  8578ccd8-76f7-4dd5-aefc-e9502499d5ee  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           74  73903f34-7e8a-41c4-853e-b43359f25b82  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           75  ba65496d-ddb1-4d08-a203-4691b4c7cc65  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           76  b20370ae-854f-4781-b6e9-564adb5e75bb  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           77  f3b34144-c8b6-4780-aee2-2ff729c2f05c  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                                                                          │ │
│ │                           [78 rows x 6 columns],                         │ │
│ │                           │   'create_final_covariates': None            │ │
│ │                           }                                              │ │
│ │ final_community_reports = │   │   │   │   │   │   │   │    id            │ │
│ │                           human_readable_id  ...      period  size       │ │
│ │                           0  edf604d62cc7486cb9dc1f3b62a1b613            │ │
│ │                           5  ...  2025-01-28    19                       │ │
│ │                           1  f428381efac24e028b01b86d6dbf1a63            │ │
│ │                           6  ...  2025-01-28     2                       │ │
│ │                           2  f6b7e995c6514905a1743e28004cd6c4            │ │
│ │                           7  ...  2025-01-28    17                       │ │
│ │                           3  255e5acc15d84fa7b72aa2a62f3d1106            │ │
│ │                           8  ...  2025-01-28     2                       │ │
│ │                           4  0a68b27dcf2c48568c408cd4fdb36ff2            │ │
│ │                           0  ...  2025-01-28    13                       │ │
│ │                           5  87ab2281a26f4425a4fa5ef7d6ff90e7            │ │
│ │                           1  ...  2025-01-28    16                       │ │
│ │                           6  c9e6911cbdf8411eb4f18bdb27e1042d            │ │
│ │                           2  ...  2025-01-28    21                       │ │
│ │                           7  cb9e029c75524fa294516f922767dfc4            │ │
│ │                           3  ...  2025-01-28    19                       │ │
│ │                           8  e535ae20b1324dba8a7917d85ebb1ca6            │ │
│ │                           4  ...  2025-01-28     3                       │ │
│ │                                                                          │ │
│ │                           [9 rows x 14 columns]                          │ │
│ │        final_covariates = None                                           │ │
│ │          final_entities = │   │   │   │   │   │   │   │   │     id  ...  │ │
│ │                           text_unit_ids                                  │ │
│ │                           0   361d38e8-a81c-43bf-a292-0cf59164fcfe  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           1   5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           2   33dce321-f4d6-451b-93a0-facff7bd4cfc  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           3   90a196a9-af02-4818-8d48-31dd069776e9  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           4   69d3cde4-21d5-4aa7-b499-52ceffabb3fd  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           ..                                   ...  ...  │ │
│ │                           ...                                            │ │
│ │                           73  8578ccd8-76f7-4dd5-aefc-e9502499d5ee  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           74  73903f34-7e8a-41c4-853e-b43359f25b82  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           75  ba65496d-ddb1-4d08-a203-4691b4c7cc65  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           76  b20370ae-854f-4781-b6e9-564adb5e75bb  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           77  f3b34144-c8b6-4780-aee2-2ff729c2f05c  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                                                                          │ │
│ │                           [78 rows x 6 columns]                          │ │
│ │             final_nodes = │   │   │   │   │   │   │   │   │      id      │ │
│ │                           human_readable_id  ...  x  y                   │ │
│ │                           0    361d38e8-a81c-43bf-a292-0cf59164fcfe      │ │
│ │                           0  ...  0  0                                   │ │
│ │                           1    361d38e8-a81c-43bf-a292-0cf59164fcfe      │ │
│ │                           0  ...  0  0                                   │ │
│ │                           2    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d      │ │
│ │                           1  ...  0  0                                   │ │
│ │                           3    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d      │ │
│ │                           1  ...  0  0                                   │ │
│ │                           4    33dce321-f4d6-451b-93a0-facff7bd4cfc      │ │
│ │                           2  ...  0  0                                   │ │
│ │                           ..                                    ...      │ │
│ │                           ...  ... .. ..                                 │ │
│ │                           113  8578ccd8-76f7-4dd5-aefc-e9502499d5ee      │ │
│ │                           73  ...  0  0                                  │ │
│ │                           114  73903f34-7e8a-41c4-853e-b43359f25b82      │ │
│ │                           74  ...  0  0                                  │ │
│ │                           115  ba65496d-ddb1-4d08-a203-4691b4c7cc65      │ │
│ │                           75  ...  0  0                                  │ │
│ │                           116  b20370ae-854f-4781-b6e9-564adb5e75bb      │ │
│ │                           76  ...  0  0                                  │ │
│ │                           117  f3b34144-c8b6-4780-aee2-2ff729c2f05c      │ │
│ │                           77  ...  0  0                                  │ │
│ │                                                                          │ │
│ │                           [118 rows x 8 columns]                         │ │
│ │     final_relationships = │   │   │   │   │   │   │   │   │     id  ...  │ │
│ │                           text_unit_ids                                  │ │
│ │                           0   30bda342-2449-47b2-ad1d-01db21aeafe3  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           1   b1d6d5ae-3b60-4297-9642-a721f9c2fb8c  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           2   f3089407-a992-4bf2-bf54-a9ce82eddd82  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           3   b1ada996-01bd-41fa-9c5e-9023b0e4651e  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           4   596f1d62-9cdd-4aa2-8d11-0cbe2cae39e3  ...  │ │
│ │                           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a3… │ │
│ │                           ..                                   ...  ...  │ │
│ │                           ...                                            │ │
│ │                           81  165ef284-3ac5-4b2c-82eb-5edddb988f48  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           82  ddc4b38f-59cc-4982-85e3-88d9fbaa06a5  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           83  c08d0886-947f-4923-91cc-92c29dfd4208  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           84  2b3f689d-a803-4a03-a775-71d6eb93c5c7  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                           85  33d7767e-e7be-42ac-8d4d-4b750cb07e9d  ...  │ │
│ │                           [332527ce3f7779776fcfae343ec912a32806bb50e27d… │ │
│ │                                                                          │ │
│ │                           [86 rows x 8 columns]                          │ │
│ │        final_text_units = │   │   │   │   │   │   │   │   │   │   │   │  │ │
│ │                           id  ...                                        │ │
│ │                           relationship_ids                               │ │
│ │                           0                                              │ │
│ │                           e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30… │ │
│ │                           ...  [30bda342-2449-47b2-ad1d-01db21aeafe3,    │ │
│ │                           b1d6d5a...                                     │ │
│ │                           1                                              │ │
│ │                           826236e9b53b61f612c6be568d84689b52b02eaab6761… │ │
│ │                           ...  [4afb894f-4bbb-40f1-8611-670ef3325b4f,    │ │
│ │                           2551005...                                     │ │
│ │                           2                                              │ │
│ │                           bcfc6a23d78c876f7cc226f911e6ce8375526d89093e8… │ │
│ │                           ...  [7c8977e4-ad87-4db9-b790-edfd3bd9dd3a,    │ │
│ │                           224194a...                                     │ │
│ │                           3                                              │ │
│ │                           332527ce3f7779776fcfae343ec912a32806bb50e27d7… │ │
│ │                           ...  [aa46818b-6b8a-43ec-8e63-2a29b0a1fbc0,    │ │
│ │                           3c85ae8...                                     │ │
│ │                                                                          │ │
│ │                           [4 rows x 7 columns]                           │ │
│ │                   query = "What's the difference between CNN and GNN?    │ │
│ │                           Concluse the pros and cons."                   │ │
│ │           response_type = 'Multiple Paragraphs'                          │ │
│ │                    root = PosixPath('/scratch/gpfs/jx0800/data/graphrag… │ │
│ │                root_dir = PosixPath('/scratch/gpfs/jx0800/data/graphrag… │ │
│ │               streaming = False                                          │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/asyncio/runners.py:190 in   │
│ run                                                                          │
│                                                                              │
│   187 │   │   │   "asyncio.run() cannot be called from a running event loop" │
│   188 │                                                                      │
│   189 │   with Runner(debug=debug) as runner:                                │
│ ❱ 190 │   │   return runner.run(main)                                        │
│   191                                                                        │
│   192                                                                        │
│   193 def _cancel_all_tasks(loop):                                           │
│                                                                              │
│ ╭────────────────────────── locals ──────────────────────────╮               │
│ │  debug = None                                              │               │
│ │   main = <coroutine object local_search at 0x1513e5e088b0> │               │
│ │ runner = <asyncio.runners.Runner object at 0x1513e6aea0d0> │               │
│ ╰────────────────────────────────────────────────────────────╯               │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/asyncio/runners.py:118 in   │
│ run                                                                          │
│                                                                              │
│   115 │   │                                                                  │
│   116 │   │   self._interrupt_count = 0                                      │
│   117 │   │   try:                                                           │
│ ❱ 118 │   │   │   return self._loop.run_until_complete(task)                 │
│   119 │   │   except exceptions.CancelledError:                              │
│   120 │   │   │   if self._interrupt_count > 0:                              │
│   121 │   │   │   │   uncancel = getattr(task, "uncancel", None)             │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │        context = <_contextvars.Context object at 0x1513e6b39ac0>         │ │
│ │           coro = <coroutine object local_search at 0x1513e5e088b0>       │ │
│ │           self = <asyncio.runners.Runner object at 0x1513e6aea0d0>       │ │
│ │ sigint_handler = functools.partial(<bound method Runner._on_sigint of    │ │
│ │                  <asyncio.runners.Runner object at 0x1513e6aea0d0>>,     │ │
│ │                  main_task=<Task finished name='Task-19'                 │ │
│ │                  coro=<local_search() done, defined at                   │ │
│ │                  /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-… │ │
│ │                  exception=TypeError("'NoneType' object is not           │ │
│ │                  iterable")>)                                            │ │
│ │           task = <Task finished name='Task-19' coro=<local_search()      │ │
│ │                  done, defined at                                        │ │
│ │                  /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-… │ │
│ │                  exception=TypeError("'NoneType' object is not           │ │
│ │                  iterable")>                                             │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/asyncio/base_events.py:650  │
│ in run_until_complete                                                        │
│                                                                              │
│    647 │   │   if not future.done():                                         │
│    648 │   │   │   raise RuntimeError('Event loop stopped before Future comp │
│    649 │   │                                                                 │
│ ❱  650 │   │   return future.result()                                        │
│    651 │                                                                     │
│    652 │   def stop(self):                                                   │
│    653 │   │   """Stop running the event loop.                               │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │   future = <Task finished name='Task-19' coro=<local_search() done,      │ │
│ │            defined at                                                    │ │
│ │            /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packag… │ │
│ │            exception=TypeError("'NoneType' object is not iterable")>     │ │
│ │ new_task = False                                                         │ │
│ │     self = <_UnixSelectorEventLoop running=False closed=True             │ │
│ │            debug=False>                                                  │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/pydantic/_int │
│ ernal/_validate_call.py:33 in wrapper_function                               │
│                                                                              │
│    30 │   │                                                                  │
│    31 │   │   @functools.wraps(wrapped)                                      │
│    32 │   │   async def wrapper_function(*args, **kwargs):  # type: ignore   │
│ ❱  33 │   │   │   return await wrapper(*args, **kwargs)                      │
│    34 │   else:                                                              │
│    35 │   │                                                                  │
│    36 │   │   @functools.wraps(wrapped)                                      │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │    args = ()                                                             │ │
│ │  kwargs = {                                                              │ │
│ │           │   'config': GraphRagConfig(                                  │ │
│ │           │   │   root_dir='/scratch/gpfs/jx0800/data/graphrag',         │ │
│ │           │   │   models={                                               │ │
│ │           │   │   │   'default_chat_model': LanguageModelConfig(         │ │
│ │           │   │   │   │                                                  │ │
│ │           api_key='eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6SXJWd1h0dnprLVRvdzlL… │ │
│ │           │   │   │   │   azure_auth_type=None,                          │ │
│ │           │   │   │   │   type="openai_chat",                            │ │
│ │           │   │   │   │   model='llama3.2:3b',                           │ │
│ │           │   │   │   │   encoding_model='cl100k_base',                  │ │
│ │           │   │   │   │   max_tokens=20000,                              │ │
│ │           │   │   │   │   temperature=0.6,                               │ │
│ │           │   │   │   │   top_p=0.9,                                     │ │
│ │           │   │   │   │   n=1,                                           │ │
│ │           │   │   │   │   frequency_penalty=0.0,                         │ │
│ │           │   │   │   │   presence_penalty=0.0,                          │ │
│ │           │   │   │   │   request_timeout=180.0,                         │ │
│ │           │   │   │   │   api_base='http://localhost:11434/v1',          │ │
│ │           │   │   │   │   api_version=None,                              │ │
│ │           │   │   │   │   deployment_name=None,                          │ │
│ │           │   │   │   │   organization=None,                             │ │
│ │           │   │   │   │   proxy=None,                                    │ │
│ │           │   │   │   │   audience=None,                                 │ │
│ │           │   │   │   │   model_supports_json=True,                      │ │
│ │           │   │   │   │   tokens_per_minute=50000,                       │ │
│ │           │   │   │   │   requests_per_minute=1000,                      │ │
│ │           │   │   │   │   max_retries=10,                                │ │
│ │           │   │   │   │   max_retry_wait=10.0,                           │ │
│ │           │   │   │   │   sleep_on_rate_limit_recommendation=True,       │ │
│ │           │   │   │   │   concurrent_requests=25,                        │ │
│ │           │   │   │   │   responses=None,                                │ │
│ │           │   │   │   │   parallelization_stagger=0.3,                   │ │
│ │           │   │   │   │   parallelization_num_threads=50,                │ │
│ │           │   │   │   │   async_mode=<AsyncType.Threaded: 'threaded'>    │ │
│ │           │   │   │   ),                                                 │ │
│ │           │   │   │   'default_embedding_model': LanguageModelConfig(    │ │
│ │           │   │   │   │                                                  │ │
│ │           api_key='eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6SXJWd1h0dnprLVRvdzlL… │ │
│ │           │   │   │   │   azure_auth_type=None,                          │ │
│ │           │   │   │   │   type="openai_embedding",                       │ │
│ │           │   │   │   │   model='nomic-embed-text',                      │ │
│ │           │   │   │   │   encoding_model='cl100k_base',                  │ │
│ │           │   │   │   │   max_tokens=20000,                              │ │
│ │           │   │   │   │   temperature=0.6,                               │ │
│ │           │   │   │   │   top_p=0.9,                                     │ │
│ │           │   │   │   │   n=1,                                           │ │
│ │           │   │   │   │   frequency_penalty=0.0,                         │ │
│ │           │   │   │   │   presence_penalty=0.0,                          │ │
│ │           │   │   │   │   request_timeout=180.0,                         │ │
│ │           │   │   │   │   api_base='http://localhost:11434/api',         │ │
│ │           │   │   │   │   api_version=None,                              │ │
│ │           │   │   │   │   deployment_name=None,                          │ │
│ │           │   │   │   │   organization=None,                             │ │
│ │           │   │   │   │   proxy=None,                                    │ │
│ │           │   │   │   │   audience=None,                                 │ │
│ │           │   │   │   │   model_supports_json=None,                      │ │
│ │           │   │   │   │   tokens_per_minute=50000,                       │ │
│ │           │   │   │   │   requests_per_minute=1000,                      │ │
│ │           │   │   │   │   max_retries=10,                                │ │
│ │           │   │   │   │   max_retry_wait=10.0,                           │ │
│ │           │   │   │   │   sleep_on_rate_limit_recommendation=True,       │ │
│ │           │   │   │   │   concurrent_requests=25,                        │ │
│ │           │   │   │   │   responses=None,                                │ │
│ │           │   │   │   │   parallelization_stagger=0.3,                   │ │
│ │           │   │   │   │   parallelization_num_threads=50,                │ │
│ │           │   │   │   │   async_mode=<AsyncType.Threaded: 'threaded'>    │ │
│ │           │   │   │   )                                                  │ │
│ │           │   │   },                                                     │ │
│ │           │   │   reporting=ReportingConfig(                             │ │
│ │           │   │   │   type="file",                                       │ │
│ │           │   │   │                                                      │ │
│ │           base_dir='/scratch/gpfs/jx0800/data/graphrag/logs',            │ │
│ │           │   │   │   connection_string=None,                            │ │
│ │           │   │   │   container_name=None,                               │ │
│ │           │   │   │   storage_account_blob_url=None                      │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   output=OutputConfig(                                   │ │
│ │           │   │   │   type="file",                                       │ │
│ │           │   │   │                                                      │ │
│ │           base_dir='/scratch/gpfs/jx0800/data/graphrag/output',          │ │
│ │           │   │   │   connection_string=None,                            │ │
│ │           │   │   │   container_name=None,                               │ │
│ │           │   │   │   storage_account_blob_url=None,                     │ │
│ │           │   │   │   cosmosdb_account_url=None                          │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   update_index_output=None,                              │ │
│ │           │   │   cache=CacheConfig(                                     │ │
│ │           │   │   │   type="file",                                       │ │
│ │           │   │   │   base_dir='cache',                                  │ │
│ │           │   │   │   connection_string=None,                            │ │
│ │           │   │   │   container_name=None,                               │ │
│ │           │   │   │   storage_account_blob_url=None,                     │ │
│ │           │   │   │   cosmosdb_account_url=None                          │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   input=InputConfig(                                     │ │
│ │           │   │   │   type="file",                                       │ │
│ │           │   │   │   file_type="text",                                  │ │
│ │           │   │   │   base_dir='input',                                  │ │
│ │           │   │   │   connection_string=None,                            │ │
│ │           │   │   │   storage_account_blob_url=None,                     │ │
│ │           │   │   │   container_name=None,                               │ │
│ │           │   │   │   encoding='utf-8',                                  │ │
│ │           │   │   │   file_pattern='.*\\.txt$',                          │ │
│ │           │   │   │   file_filter=None,                                  │ │
│ │           │   │   │   source_column=None,                                │ │
│ │           │   │   │   timestamp_column=None,                             │ │
│ │           │   │   │   timestamp_format=None,                             │ │
│ │           │   │   │   text_column='text',                                │ │
│ │           │   │   │   title_column=None,                                 │ │
│ │           │   │   │   document_attribute_columns=[]                      │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   embed_graph=EmbedGraphConfig(                          │ │
│ │           │   │   │   enabled=False,                                     │ │
│ │           │   │   │   dimensions=1536,                                   │ │
│ │           │   │   │   num_walks=10,                                      │ │
│ │           │   │   │   walk_length=40,                                    │ │
│ │           │   │   │   window_size=2,                                     │ │
│ │           │   │   │   iterations=3,                                      │ │
│ │           │   │   │   random_seed=597832,                                │ │
│ │           │   │   │   use_lcc=True                                       │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   embeddings=TextEmbeddingConfig(                        │ │
│ │           │   │   │   batch_size=16,                                     │ │
│ │           │   │   │   batch_max_tokens=8191,                             │ │
│ │           │   │   │   target="required",                                 │ │
│ │           │   │   │   names=[],                                          │ │
│ │           │   │   │   strategy=None,                                     │ │
│ │           │   │   │   model_id='default_embedding_model'                 │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   chunks=ChunkingConfig(                                 │ │
│ │           │   │   │   size=1200,                                         │ │
│ │           │   │   │   overlap=100,                                       │ │
│ │           │   │   │   group_by_columns=['id'],                           │ │
│ │           │   │   │   strategy="tokens",                                 │ │
│ │           │   │   │   encoding_model='cl100k_base'                       │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   snapshots=SnapshotsConfig(                             │ │
│ │           │   │   │   embeddings=False,                                  │ │
│ │           │   │   │   graphml=False,                                     │ │
│ │           │   │   │   transient=False                                    │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   entity_extraction=EntityExtractionConfig(              │ │
│ │           │   │   │   prompt='prompts/entity_extraction.txt',            │ │
│ │           │   │   │   entity_types=[                                     │ │
│ │           │   │   │   │   'organization',                                │ │
│ │           │   │   │   │   'person',                                      │ │
│ │           │   │   │   │   'geo',                                         │ │
│ │           │   │   │   │   'event'                                        │ │
│ │           │   │   │   ],                                                 │ │
│ │           │   │   │   max_gleanings=1,                                   │ │
│ │           │   │   │   strategy=None,                                     │ │
│ │           │   │   │   encoding_model=None,                               │ │
│ │           │   │   │   model_id='default_chat_model'                      │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   summarize_descriptions=SummarizeDescriptionsConfig(    │ │
│ │           │   │   │   prompt='prompts/summarize_descriptions.txt',       │ │
│ │           │   │   │   max_length=500,                                    │ │
│ │           │   │   │   strategy=None,                                     │ │
│ │           │   │   │   model_id='default_chat_model'                      │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   community_reports=CommunityReportsConfig(              │ │
│ │           │   │   │   prompt='prompts/community_report.txt',             │ │
│ │           │   │   │   max_length=2000,                                   │ │
│ │           │   │   │   max_input_length=8000,                             │ │
│ │           │   │   │   strategy=None,                                     │ │
│ │           │   │   │   model_id='default_chat_model'                      │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   claim_extraction=ClaimExtractionConfig(                │ │
│ │           │   │   │   enabled=False,                                     │ │
│ │           │   │   │   prompt='prompts/claim_extraction.txt',             │ │
│ │           │   │   │   description='Any claims or facts that could be     │ │
│ │           relevant to information discovery.',                           │ │
│ │           │   │   │   max_gleanings=1,                                   │ │
│ │           │   │   │   strategy=None,                                     │ │
│ │           │   │   │   encoding_model=None,                               │ │
│ │           │   │   │   model_id='default_chat_model'                      │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   cluster_graph=ClusterGraphConfig(                      │ │
│ │           │   │   │   max_cluster_size=10,                               │ │
│ │           │   │   │   use_lcc=True,                                      │ │
│ │           │   │   │   seed=3735928559                                    │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   umap=UmapConfig(enabled=False),                        │ │
│ │           │   │   local_search=LocalSearchConfig(                        │ │
│ │           │   │   │   prompt='prompts/local_search_system_prompt.txt',   │ │
│ │           │   │   │   text_unit_prop=0.5,                                │ │
│ │           │   │   │   community_prop=0.15,                               │ │
│ │           │   │   │   conversation_history_max_turns=5,                  │ │
│ │           │   │   │   top_k_entities=10,                                 │ │
│ │           │   │   │   top_k_relationships=10,                            │ │
│ │           │   │   │   temperature=0.6,                                   │ │
│ │           │   │   │   top_p=0.9,                                         │ │
│ │           │   │   │   n=1,                                               │ │
│ │           │   │   │   max_tokens=20000,                                  │ │
│ │           │   │   │   llm_max_tokens=20000                               │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   global_search=GlobalSearchConfig(                      │ │
│ │           │   │   │                                                      │ │
│ │           map_prompt='prompts/global_search_map_system_prompt.txt',      │ │
│ │           │   │   │                                                      │ │
│ │           reduce_prompt='prompts/global_search_reduce_system_prompt.txt… │ │
│ │           │   │   │                                                      │ │
│ │           knowledge_prompt='prompts/global_search_knowledge_system_prom… │ │
│ │           │   │   │   temperature=0,                                     │ │
│ │           │   │   │   top_p=1,                                           │ │
│ │           │   │   │   n=1,                                               │ │
│ │           │   │   │   max_tokens=12000,                                  │ │
│ │           │   │   │   data_max_tokens=12000,                             │ │
│ │           │   │   │   map_max_tokens=1000,                               │ │
│ │           │   │   │   reduce_max_tokens=2000,                            │ │
│ │           │   │   │   concurrency=32,                                    │ │
│ │           │   │   │   dynamic_search_llm='gpt-4o-mini',                  │ │
│ │           │   │   │   dynamic_search_threshold=1,                        │ │
│ │           │   │   │   dynamic_search_keep_parent=False,                  │ │
│ │           │   │   │   dynamic_search_num_repeats=1,                      │ │
│ │           │   │   │   dynamic_search_use_summary=False,                  │ │
│ │           │   │   │   dynamic_search_concurrent_coroutines=16,           │ │
│ │           │   │   │   dynamic_search_max_level=2                         │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   drift_search=DRIFTSearchConfig(                        │ │
│ │           │   │   │   prompt='prompts/drift_search_system_prompt.txt',   │ │
│ │           │   │   │                                                      │ │
│ │           reduce_prompt='prompts/drift_search_reduce_prompt.txt',        │ │
│ │           │   │   │   temperature=0,                                     │ │
│ │           │   │   │   top_p=1,                                           │ │
│ │           │   │   │   n=3,                                               │ │
│ │           │   │   │   max_tokens=12000,                                  │ │
│ │           │   │   │   data_max_tokens=12000,                             │ │
│ │           │   │   │   reduce_max_tokens=2000,                            │ │
│ │           │   │   │   reduce_temperature=0,                              │ │
│ │           │   │   │   concurrency=32,                                    │ │
│ │           │   │   │   drift_k_followups=20,                              │ │
│ │           │   │   │   primer_folds=5,                                    │ │
│ │           │   │   │   primer_llm_max_tokens=12000,                       │ │
│ │           │   │   │   n_depth=3,                                         │ │
│ │           │   │   │   local_search_text_unit_prop=0.9,                   │ │
│ │           │   │   │   local_search_community_prop=0.1,                   │ │
│ │           │   │   │   local_search_top_k_mapped_entities=10,             │ │
│ │           │   │   │   local_search_top_k_relationships=10,               │ │
│ │           │   │   │   local_search_max_data_tokens=12000,                │ │
│ │           │   │   │   local_search_temperature=0,                        │ │
│ │           │   │   │   local_search_top_p=1,                              │ │
│ │           │   │   │   local_search_n=1,                                  │ │
│ │           │   │   │   local_search_llm_max_gen_tokens=2000               │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   basic_search=BasicSearchConfig(                        │ │
│ │           │   │   │   prompt='prompts/basic_search_system_prompt.txt',   │ │
│ │           │   │   │   text_unit_prop=0.5,                                │ │
│ │           │   │   │   conversation_history_max_turns=5,                  │ │
│ │           │   │   │   temperature=0,                                     │ │
│ │           │   │   │   top_p=1,                                           │ │
│ │           │   │   │   n=1,                                               │ │
│ │           │   │   │   max_tokens=12000,                                  │ │
│ │           │   │   │   llm_max_tokens=2000                                │ │
│ │           │   │   ),                                                     │ │
│ │           │   │   vector_store={                                         │ │
│ │           │   │   │   'output': VectorStoreConfig(                       │ │
│ │           │   │   │   │   type='lancedb',                                │ │
│ │           │   │   │   │                                                  │ │
│ │           db_uri='/scratch/gpfs/jx0800/data/graphrag/output/lancedb',    │ │
│ │           │   │   │   │   url=None,                                      │ │
│ │           │   │   │   │   api_key=None,                                  │ │
│ │           │   │   │   │   audience=None,                                 │ │
│ │           │   │   │   │   container_name='default',                      │ │
│ │           │   │   │   │   database_name=None,                            │ │
│ │           │   │   │   │   overwrite=True                                 │ │
│ │           │   │   │   )                                                  │ │
│ │           │   │   }                                                      │ │
│ │           │   ),                                                         │ │
│ │           │   'nodes':                                        id         │ │
│ │           human_readable_id  ...  x  y                                   │ │
│ │           0    361d38e8-a81c-43bf-a292-0cf59164fcfe                  0   │ │
│ │           ...  0  0                                                      │ │
│ │           1    361d38e8-a81c-43bf-a292-0cf59164fcfe                  0   │ │
│ │           ...  0  0                                                      │ │
│ │           2    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d                  1   │ │
│ │           ...  0  0                                                      │ │
│ │           3    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d                  1   │ │
│ │           ...  0  0                                                      │ │
│ │           4    33dce321-f4d6-451b-93a0-facff7bd4cfc                  2   │ │
│ │           ...  0  0                                                      │ │
│ │           ..                                    ...                ...   │ │
│ │           ... .. ..                                                      │ │
│ │           113  8578ccd8-76f7-4dd5-aefc-e9502499d5ee                 73   │ │
│ │           ...  0  0                                                      │ │
│ │           114  73903f34-7e8a-41c4-853e-b43359f25b82                 74   │ │
│ │           ...  0  0                                                      │ │
│ │           115  ba65496d-ddb1-4d08-a203-4691b4c7cc65                 75   │ │
│ │           ...  0  0                                                      │ │
│ │           116  b20370ae-854f-4781-b6e9-564adb5e75bb                 76   │ │
│ │           ...  0  0                                                      │ │
│ │           117  f3b34144-c8b6-4780-aee2-2ff729c2f05c                 77   │ │
│ │           ...  0  0                                                      │ │
│ │                                                                          │ │
│ │           [118 rows x 8 columns],                                        │ │
│ │           │   'entities':                                       id  ...  │ │
│ │           text_unit_ids                                                  │ │
│ │           0   361d38e8-a81c-43bf-a292-0cf59164fcfe  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           1   5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           2   33dce321-f4d6-451b-93a0-facff7bd4cfc  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           3   90a196a9-af02-4818-8d48-31dd069776e9  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           4   69d3cde4-21d5-4aa7-b499-52ceffabb3fd  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           ..                                   ...  ...                  │ │
│ │           ...                                                            │ │
│ │           73  8578ccd8-76f7-4dd5-aefc-e9502499d5ee  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           74  73903f34-7e8a-41c4-853e-b43359f25b82  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           75  ba65496d-ddb1-4d08-a203-4691b4c7cc65  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           76  b20370ae-854f-4781-b6e9-564adb5e75bb  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           77  f3b34144-c8b6-4780-aee2-2ff729c2f05c  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │                                                                          │ │
│ │           [78 rows x 6 columns],                                         │ │
│ │           │   'community_reports':                                  id   │ │
│ │           human_readable_id  ...      period  size                       │ │
│ │           0  edf604d62cc7486cb9dc1f3b62a1b613                  5  ...    │ │
│ │           2025-01-28    19                                               │ │
│ │           1  f428381efac24e028b01b86d6dbf1a63                  6  ...    │ │
│ │           2025-01-28     2                                               │ │
│ │           2  f6b7e995c6514905a1743e28004cd6c4                  7  ...    │ │
│ │           2025-01-28    17                                               │ │
│ │           3  255e5acc15d84fa7b72aa2a62f3d1106                  8  ...    │ │
│ │           2025-01-28     2                                               │ │
│ │           4  0a68b27dcf2c48568c408cd4fdb36ff2                  0  ...    │ │
│ │           2025-01-28    13                                               │ │
│ │           5  87ab2281a26f4425a4fa5ef7d6ff90e7                  1  ...    │ │
│ │           2025-01-28    16                                               │ │
│ │           6  c9e6911cbdf8411eb4f18bdb27e1042d                  2  ...    │ │
│ │           2025-01-28    21                                               │ │
│ │           7  cb9e029c75524fa294516f922767dfc4                  3  ...    │ │
│ │           2025-01-28    19                                               │ │
│ │           8  e535ae20b1324dba8a7917d85ebb1ca6                  4  ...    │ │
│ │           2025-01-28     3                                               │ │
│ │                                                                          │ │
│ │           [9 rows x 14 columns],                                         │ │
│ │           │   'text_units':                                              │ │
│ │           id  ...                                   relationship_ids     │ │
│ │           0  e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a303...  ...      │ │
│ │           [30bda342-2449-47b2-ad1d-01db21aeafe3, b1d6d5a...              │ │
│ │           1  826236e9b53b61f612c6be568d84689b52b02eaab67617...  ...      │ │
│ │           [4afb894f-4bbb-40f1-8611-670ef3325b4f, 2551005...              │ │
│ │           2  bcfc6a23d78c876f7cc226f911e6ce8375526d89093e88...  ...      │ │
│ │           [7c8977e4-ad87-4db9-b790-edfd3bd9dd3a, 224194a...              │ │
│ │           3  332527ce3f7779776fcfae343ec912a32806bb50e27d75...  ...      │ │
│ │           [aa46818b-6b8a-43ec-8e63-2a29b0a1fbc0, 3c85ae8...              │ │
│ │                                                                          │ │
│ │           [4 rows x 7 columns],                                          │ │
│ │           │   'relationships':                                       id  │ │
│ │           ...                                      text_unit_ids         │ │
│ │           0   30bda342-2449-47b2-ad1d-01db21aeafe3  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           1   b1d6d5ae-3b60-4297-9642-a721f9c2fb8c  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           2   f3089407-a992-4bf2-bf54-a9ce82eddd82  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           3   b1ada996-01bd-41fa-9c5e-9023b0e4651e  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           4   596f1d62-9cdd-4aa2-8d11-0cbe2cae39e3  ...                  │ │
│ │           [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce43a30...              │ │
│ │           ..                                   ...  ...                  │ │
│ │           ...                                                            │ │
│ │           81  165ef284-3ac5-4b2c-82eb-5edddb988f48  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           82  ddc4b38f-59cc-4982-85e3-88d9fbaa06a5  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           83  c08d0886-947f-4923-91cc-92c29dfd4208  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           84  2b3f689d-a803-4a03-a775-71d6eb93c5c7  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │           85  33d7767e-e7be-42ac-8d4d-4b750cb07e9d  ...                  │ │
│ │           [332527ce3f7779776fcfae343ec912a32806bb50e27d7...              │ │
│ │                                                                          │ │
│ │           [86 rows x 8 columns],                                         │ │
│ │           │   'covariates': None,                                        │ │
│ │           │   'community_level': 2,                                      │ │
│ │           │   'response_type': 'Multiple Paragraphs',                    │ │
│ │           │   'query': "What's the difference between CNN and GNN?       │ │
│ │           Concluse the pros and cons."                                   │ │
│ │           }                                                              │ │
│ │ wrapper = <bound method ValidateCallWrapper.__call__ of                  │ │
│ │           <pydantic._internal._validate_call.ValidateCallWrapper object  │ │
│ │           at 0x1513e60fcf40>>                                            │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/api/query.py:438 in local_search              │
│                                                                              │
│    435 │   │   system_prompt=prompt,                                         │
│    436 │   )                                                                 │
│    437 │                                                                     │
│ ❱  438 │   result: SearchResult = await search_engine.asearch(query=query)   │
│    439 │   response = result.response                                        │
│    440 │   context_data = reformat_context_data(result.context_data)  # type │
│    441 │   return response, context_data                                     │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │             community_level = 2                                          │ │
│ │           community_reports = │   │   │   │   │   │   │   │    id        │ │
│ │                               human_readable_id  ...      period  size   │ │
│ │                               0  edf604d62cc7486cb9dc1f3b62a1b613        │ │
│ │                               5  ...  2025-01-28    19                   │ │
│ │                               1  f428381efac24e028b01b86d6dbf1a63        │ │
│ │                               6  ...  2025-01-28     2                   │ │
│ │                               2  f6b7e995c6514905a1743e28004cd6c4        │ │
│ │                               7  ...  2025-01-28    17                   │ │
│ │                               3  255e5acc15d84fa7b72aa2a62f3d1106        │ │
│ │                               8  ...  2025-01-28     2                   │ │
│ │                               4  0a68b27dcf2c48568c408cd4fdb36ff2        │ │
│ │                               0  ...  2025-01-28    13                   │ │
│ │                               5  87ab2281a26f4425a4fa5ef7d6ff90e7        │ │
│ │                               1  ...  2025-01-28    16                   │ │
│ │                               6  c9e6911cbdf8411eb4f18bdb27e1042d        │ │
│ │                               2  ...  2025-01-28    21                   │ │
│ │                               7  cb9e029c75524fa294516f922767dfc4        │ │
│ │                               3  ...  2025-01-28    19                   │ │
│ │                               8  e535ae20b1324dba8a7917d85ebb1ca6        │ │
│ │                               4  ...  2025-01-28     3                   │ │
│ │                                                                          │ │
│ │                               [9 rows x 14 columns]                      │ │
│ │                      config = GraphRagConfig(                            │ │
│ │                               │                                          │ │
│ │                               root_dir='/scratch/gpfs/jx0800/data/graph… │ │
│ │                               │   models={                               │ │
│ │                               │   │   'default_chat_model':              │ │
│ │                               LanguageModelConfig(                       │ │
│ │                               │   │   │                                  │ │
│ │                               api_key='eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6… │ │
│ │                               │   │   │   azure_auth_type=None,          │ │
│ │                               │   │   │   type="openai_chat",            │ │
│ │                               │   │   │   model='llama3.2:3b',           │ │
│ │                               │   │   │   encoding_model='cl100k_base',  │ │
│ │                               │   │   │   max_tokens=20000,              │ │
│ │                               │   │   │   temperature=0.6,               │ │
│ │                               │   │   │   top_p=0.9,                     │ │
│ │                               │   │   │   n=1,                           │ │
│ │                               │   │   │   frequency_penalty=0.0,         │ │
│ │                               │   │   │   presence_penalty=0.0,          │ │
│ │                               │   │   │   request_timeout=180.0,         │ │
│ │                               │   │   │                                  │ │
│ │                               api_base='http://localhost:11434/v1',      │ │
│ │                               │   │   │   api_version=None,              │ │
│ │                               │   │   │   deployment_name=None,          │ │
│ │                               │   │   │   organization=None,             │ │
│ │                               │   │   │   proxy=None,                    │ │
│ │                               │   │   │   audience=None,                 │ │
│ │                               │   │   │   model_supports_json=True,      │ │
│ │                               │   │   │   tokens_per_minute=50000,       │ │
│ │                               │   │   │   requests_per_minute=1000,      │ │
│ │                               │   │   │   max_retries=10,                │ │
│ │                               │   │   │   max_retry_wait=10.0,           │ │
│ │                               │   │   │                                  │ │
│ │                               sleep_on_rate_limit_recommendation=True,   │ │
│ │                               │   │   │   concurrent_requests=25,        │ │
│ │                               │   │   │   responses=None,                │ │
│ │                               │   │   │   parallelization_stagger=0.3,   │ │
│ │                               │   │   │                                  │ │
│ │                               parallelization_num_threads=50,            │ │
│ │                               │   │   │                                  │ │
│ │                               async_mode=<AsyncType.Threaded:            │ │
│ │                               'threaded'>                                │ │
│ │                               │   │   ),                                 │ │
│ │                               │   │   'default_embedding_model':         │ │
│ │                               LanguageModelConfig(                       │ │
│ │                               │   │   │                                  │ │
│ │                               api_key='eyJhbGciOiJIUzI1NiIsImtpZCI6IlV6… │ │
│ │                               │   │   │   azure_auth_type=None,          │ │
│ │                               │   │   │   type="openai_embedding",       │ │
│ │                               │   │   │   model='nomic-embed-text',      │ │
│ │                               │   │   │   encoding_model='cl100k_base',  │ │
│ │                               │   │   │   max_tokens=20000,              │ │
│ │                               │   │   │   temperature=0.6,               │ │
│ │                               │   │   │   top_p=0.9,                     │ │
│ │                               │   │   │   n=1,                           │ │
│ │                               │   │   │   frequency_penalty=0.0,         │ │
│ │                               │   │   │   presence_penalty=0.0,          │ │
│ │                               │   │   │   request_timeout=180.0,         │ │
│ │                               │   │   │                                  │ │
│ │                               api_base='http://localhost:11434/api',     │ │
│ │                               │   │   │   api_version=None,              │ │
│ │                               │   │   │   deployment_name=None,          │ │
│ │                               │   │   │   organization=None,             │ │
│ │                               │   │   │   proxy=None,                    │ │
│ │                               │   │   │   audience=None,                 │ │
│ │                               │   │   │   model_supports_json=None,      │ │
│ │                               │   │   │   tokens_per_minute=50000,       │ │
│ │                               │   │   │   requests_per_minute=1000,      │ │
│ │                               │   │   │   max_retries=10,                │ │
│ │                               │   │   │   max_retry_wait=10.0,           │ │
│ │                               │   │   │                                  │ │
│ │                               sleep_on_rate_limit_recommendation=True,   │ │
│ │                               │   │   │   concurrent_requests=25,        │ │
│ │                               │   │   │   responses=None,                │ │
│ │                               │   │   │   parallelization_stagger=0.3,   │ │
│ │                               │   │   │                                  │ │
│ │                               parallelization_num_threads=50,            │ │
│ │                               │   │   │                                  │ │
│ │                               async_mode=<AsyncType.Threaded:            │ │
│ │                               'threaded'>                                │ │
│ │                               │   │   )                                  │ │
│ │                               │   },                                     │ │
│ │                               │   reporting=ReportingConfig(             │ │
│ │                               │   │   type="file",                       │ │
│ │                               │   │                                      │ │
│ │                               base_dir='/scratch/gpfs/jx0800/data/graph… │ │
│ │                               │   │   connection_string=None,            │ │
│ │                               │   │   container_name=None,               │ │
│ │                               │   │   storage_account_blob_url=None      │ │
│ │                               │   ),                                     │ │
│ │                               │   output=OutputConfig(                   │ │
│ │                               │   │   type="file",                       │ │
│ │                               │   │                                      │ │
│ │                               base_dir='/scratch/gpfs/jx0800/data/graph… │ │
│ │                               │   │   connection_string=None,            │ │
│ │                               │   │   container_name=None,               │ │
│ │                               │   │   storage_account_blob_url=None,     │ │
│ │                               │   │   cosmosdb_account_url=None          │ │
│ │                               │   ),                                     │ │
│ │                               │   update_index_output=None,              │ │
│ │                               │   cache=CacheConfig(                     │ │
│ │                               │   │   type="file",                       │ │
│ │                               │   │   base_dir='cache',                  │ │
│ │                               │   │   connection_string=None,            │ │
│ │                               │   │   container_name=None,               │ │
│ │                               │   │   storage_account_blob_url=None,     │ │
│ │                               │   │   cosmosdb_account_url=None          │ │
│ │                               │   ),                                     │ │
│ │                               │   input=InputConfig(                     │ │
│ │                               │   │   type="file",                       │ │
│ │                               │   │   file_type="text",                  │ │
│ │                               │   │   base_dir='input',                  │ │
│ │                               │   │   connection_string=None,            │ │
│ │                               │   │   storage_account_blob_url=None,     │ │
│ │                               │   │   container_name=None,               │ │
│ │                               │   │   encoding='utf-8',                  │ │
│ │                               │   │   file_pattern='.*\\.txt$',          │ │
│ │                               │   │   file_filter=None,                  │ │
│ │                               │   │   source_column=None,                │ │
│ │                               │   │   timestamp_column=None,             │ │
│ │                               │   │   timestamp_format=None,             │ │
│ │                               │   │   text_column='text',                │ │
│ │                               │   │   title_column=None,                 │ │
│ │                               │   │   document_attribute_columns=[]      │ │
│ │                               │   ),                                     │ │
│ │                               │   embed_graph=EmbedGraphConfig(          │ │
│ │                               │   │   enabled=False,                     │ │
│ │                               │   │   dimensions=1536,                   │ │
│ │                               │   │   num_walks=10,                      │ │
│ │                               │   │   walk_length=40,                    │ │
│ │                               │   │   window_size=2,                     │ │
│ │                               │   │   iterations=3,                      │ │
│ │                               │   │   random_seed=597832,                │ │
│ │                               │   │   use_lcc=True                       │ │
│ │                               │   ),                                     │ │
│ │                               │   embeddings=TextEmbeddingConfig(        │ │
│ │                               │   │   batch_size=16,                     │ │
│ │                               │   │   batch_max_tokens=8191,             │ │
│ │                               │   │   target="required",                 │ │
│ │                               │   │   names=[],                          │ │
│ │                               │   │   strategy=None,                     │ │
│ │                               │   │   model_id='default_embedding_model' │ │
│ │                               │   ),                                     │ │
│ │                               │   chunks=ChunkingConfig(                 │ │
│ │                               │   │   size=1200,                         │ │
│ │                               │   │   overlap=100,                       │ │
│ │                               │   │   group_by_columns=['id'],           │ │
│ │                               │   │   strategy="tokens",                 │ │
│ │                               │   │   encoding_model='cl100k_base'       │ │
│ │                               │   ),                                     │ │
│ │                               │   snapshots=SnapshotsConfig(             │ │
│ │                               │   │   embeddings=False,                  │ │
│ │                               │   │   graphml=False,                     │ │
│ │                               │   │   transient=False                    │ │
│ │                               │   ),                                     │ │
│ │                               │                                          │ │
│ │                               entity_extraction=EntityExtractionConfig(  │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/entity_extraction.txt',    │ │
│ │                               │   │   entity_types=[                     │ │
│ │                               │   │   │   'organization',                │ │
│ │                               │   │   │   'person',                      │ │
│ │                               │   │   │   'geo',                         │ │
│ │                               │   │   │   'event'                        │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   max_gleanings=1,                   │ │
│ │                               │   │   strategy=None,                     │ │
│ │                               │   │   encoding_model=None,               │ │
│ │                               │   │   model_id='default_chat_model'      │ │
│ │                               │   ),                                     │ │
│ │                               │                                          │ │
│ │                               summarize_descriptions=SummarizeDescripti… │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/summarize_descriptions.tx… │ │
│ │                               │   │   max_length=500,                    │ │
│ │                               │   │   strategy=None,                     │ │
│ │                               │   │   model_id='default_chat_model'      │ │
│ │                               │   ),                                     │ │
│ │                               │                                          │ │
│ │                               community_reports=CommunityReportsConfig(  │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/community_report.txt',     │ │
│ │                               │   │   max_length=2000,                   │ │
│ │                               │   │   max_input_length=8000,             │ │
│ │                               │   │   strategy=None,                     │ │
│ │                               │   │   model_id='default_chat_model'      │ │
│ │                               │   ),                                     │ │
│ │                               │                                          │ │
│ │                               claim_extraction=ClaimExtractionConfig(    │ │
│ │                               │   │   enabled=False,                     │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/claim_extraction.txt',     │ │
│ │                               │   │   description='Any claims or facts   │ │
│ │                               that could be relevant to information      │ │
│ │                               discovery.',                               │ │
│ │                               │   │   max_gleanings=1,                   │ │
│ │                               │   │   strategy=None,                     │ │
│ │                               │   │   encoding_model=None,               │ │
│ │                               │   │   model_id='default_chat_model'      │ │
│ │                               │   ),                                     │ │
│ │                               │   cluster_graph=ClusterGraphConfig(      │ │
│ │                               │   │   max_cluster_size=10,               │ │
│ │                               │   │   use_lcc=True,                      │ │
│ │                               │   │   seed=3735928559                    │ │
│ │                               │   ),                                     │ │
│ │                               │   umap=UmapConfig(enabled=False),        │ │
│ │                               │   local_search=LocalSearchConfig(        │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/local_search_system_promp… │ │
│ │                               │   │   text_unit_prop=0.5,                │ │
│ │                               │   │   community_prop=0.15,               │ │
│ │                               │   │   conversation_history_max_turns=5,  │ │
│ │                               │   │   top_k_entities=10,                 │ │
│ │                               │   │   top_k_relationships=10,            │ │
│ │                               │   │   temperature=0.6,                   │ │
│ │                               │   │   top_p=0.9,                         │ │
│ │                               │   │   n=1,                               │ │
│ │                               │   │   max_tokens=20000,                  │ │
│ │                               │   │   llm_max_tokens=20000               │ │
│ │                               │   ),                                     │ │
│ │                               │   global_search=GlobalSearchConfig(      │ │
│ │                               │   │                                      │ │
│ │                               map_prompt='prompts/global_search_map_sys… │ │
│ │                               │   │                                      │ │
│ │                               reduce_prompt='prompts/global_search_redu… │ │
│ │                               │   │                                      │ │
│ │                               knowledge_prompt='prompts/global_search_k… │ │
│ │                               │   │   temperature=0,                     │ │
│ │                               │   │   top_p=1,                           │ │
│ │                               │   │   n=1,                               │ │
│ │                               │   │   max_tokens=12000,                  │ │
│ │                               │   │   data_max_tokens=12000,             │ │
│ │                               │   │   map_max_tokens=1000,               │ │
│ │                               │   │   reduce_max_tokens=2000,            │ │
│ │                               │   │   concurrency=32,                    │ │
│ │                               │   │   dynamic_search_llm='gpt-4o-mini',  │ │
│ │                               │   │   dynamic_search_threshold=1,        │ │
│ │                               │   │   dynamic_search_keep_parent=False,  │ │
│ │                               │   │   dynamic_search_num_repeats=1,      │ │
│ │                               │   │   dynamic_search_use_summary=False,  │ │
│ │                               │   │                                      │ │
│ │                               dynamic_search_concurrent_coroutines=16,   │ │
│ │                               │   │   dynamic_search_max_level=2         │ │
│ │                               │   ),                                     │ │
│ │                               │   drift_search=DRIFTSearchConfig(        │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/drift_search_system_promp… │ │
│ │                               │   │                                      │ │
│ │                               reduce_prompt='prompts/drift_search_reduc… │ │
│ │                               │   │   temperature=0,                     │ │
│ │                               │   │   top_p=1,                           │ │
│ │                               │   │   n=3,                               │ │
│ │                               │   │   max_tokens=12000,                  │ │
│ │                               │   │   data_max_tokens=12000,             │ │
│ │                               │   │   reduce_max_tokens=2000,            │ │
│ │                               │   │   reduce_temperature=0,              │ │
│ │                               │   │   concurrency=32,                    │ │
│ │                               │   │   drift_k_followups=20,              │ │
│ │                               │   │   primer_folds=5,                    │ │
│ │                               │   │   primer_llm_max_tokens=12000,       │ │
│ │                               │   │   n_depth=3,                         │ │
│ │                               │   │   local_search_text_unit_prop=0.9,   │ │
│ │                               │   │   local_search_community_prop=0.1,   │ │
│ │                               │   │                                      │ │
│ │                               local_search_top_k_mapped_entities=10,     │ │
│ │                               │   │                                      │ │
│ │                               local_search_top_k_relationships=10,       │ │
│ │                               │   │                                      │ │
│ │                               local_search_max_data_tokens=12000,        │ │
│ │                               │   │   local_search_temperature=0,        │ │
│ │                               │   │   local_search_top_p=1,              │ │
│ │                               │   │   local_search_n=1,                  │ │
│ │                               │   │                                      │ │
│ │                               local_search_llm_max_gen_tokens=2000       │ │
│ │                               │   ),                                     │ │
│ │                               │   basic_search=BasicSearchConfig(        │ │
│ │                               │   │                                      │ │
│ │                               prompt='prompts/basic_search_system_promp… │ │
│ │                               │   │   text_unit_prop=0.5,                │ │
│ │                               │   │   conversation_history_max_turns=5,  │ │
│ │                               │   │   temperature=0,                     │ │
│ │                               │   │   top_p=1,                           │ │
│ │                               │   │   n=1,                               │ │
│ │                               │   │   max_tokens=12000,                  │ │
│ │                               │   │   llm_max_tokens=2000                │ │
│ │                               │   ),                                     │ │
│ │                               │   vector_store={                         │ │
│ │                               │   │   'output': VectorStoreConfig(       │ │
│ │                               │   │   │   type='lancedb',                │ │
│ │                               │   │   │                                  │ │
│ │                               db_uri='/scratch/gpfs/jx0800/data/graphra… │ │
│ │                               │   │   │   url=None,                      │ │
│ │                               │   │   │   api_key=None,                  │ │
│ │                               │   │   │   audience=None,                 │ │
│ │                               │   │   │   container_name='default',      │ │
│ │                               │   │   │   database_name=None,            │ │
│ │                               │   │   │   overwrite=True                 │ │
│ │                               │   │   )                                  │ │
│ │                               │   }                                      │ │
│ │                               )                                          │ │
│ │                  covariates = None                                       │ │
│ │                 covariates_ = []                                         │ │
│ │ description_embedding_store = <graphrag.vector_stores.lancedb.LanceDBVe… │ │
│ │                               object at 0x1513e6b179d0>                  │ │
│ │                    entities = │   │   │   │   │   │   │   │   │     id   │ │
│ │                               ...                                        │ │
│ │                               text_unit_ids                              │ │
│ │                               0   361d38e8-a81c-43bf-a292-0cf59164fcfe   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               1   5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               2   33dce321-f4d6-451b-93a0-facff7bd4cfc   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               3   90a196a9-af02-4818-8d48-31dd069776e9   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               4   69d3cde4-21d5-4aa7-b499-52ceffabb3fd   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               ..                                   ...   │ │
│ │                               ...                                        │ │
│ │                               ...                                        │ │
│ │                               73  8578ccd8-76f7-4dd5-aefc-e9502499d5ee   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               74  73903f34-7e8a-41c4-853e-b43359f25b82   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               75  ba65496d-ddb1-4d08-a203-4691b4c7cc65   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               76  b20370ae-854f-4781-b6e9-564adb5e75bb   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               77  f3b34144-c8b6-4780-aee2-2ff729c2f05c   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                                                                          │ │
│ │                               [78 rows x 6 columns]                      │ │
│ │                   entities_ = [                                          │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='05e2a376-1b86-4c7d-8188-f0ba77ff466e', │ │
│ │                               │   │   short_id='72',                     │ │
│ │                               │   │   title='LINFORMER',                 │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='Linformer is a model  │ │
│ │                               that aims to make transformer neural       │ │
│ │                               networks more efficien'+1,                 │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['1'],               │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               '332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='06664b5c-6528-43af-ac46-d3374d70c762', │ │
│ │                               │   │   short_id='38',                     │ │
│ │                               │   │   title='SEARCH ENGINES',            │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='Search engines are a  │ │
│ │                               type of application that benefit from      │ │
│ │                               Graph Neural Networks'+64,                 │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['4'],               │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               '826236e9b53b61f612c6be568d84689b52b02eaa… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='093d68c5-5d78-42b6-929c-a086b45c8269', │ │
│ │                               │   │   short_id='49',                     │ │
│ │                               │   │   title='RESNET',                    │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='ResNet is a           │ │
│ │                               convolutional neural network model that    │ │
│ │                               achieved state-of-the-art pe'+48,          │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['2', '5'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'bcfc6a23d78c876f7cc226f911e6ce8375526d89… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='1090b294-ea12-4b0d-9790-dfbb7ced303f', │ │
│ │                               │   │   short_id='50',                     │ │
│ │                               │   │   title='YOLO',                      │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='YOLO is an object     │ │
│ │                               detection framework that leverages         │ │
│ │                               Convolutional Neural Networ'+49,           │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['2', '5'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'bcfc6a23d78c876f7cc226f911e6ce8375526d89… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='20b2e048-f4d4-4fb5-9a3b-304e0681967c', │ │
│ │                               │   │   short_id='30',                     │ │
│ │                               │   │   title='CONVOLUTIONAL NEURAL        │ │
│ │                               NETWORKS',                                 │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='Convolutional Neural  │ │
│ │                               Networks are a type of neural network      │ │
│ │                               designed for processi'+483,                │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['2', '5'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               '826236e9b53b61f612c6be568d84689b52b02eaa… │ │
│ │                               │   │   │                                  │ │
│ │                               'bcfc6a23d78c876f7cc226f911e6ce8375526d89… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=22,                           │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='21e8a915-d1a5-4c21-a67d-423ab9e9a7c6', │ │
│ │                               │   │   short_id='57',                     │ │
│ │                               │   │   title='GENOMICS',                  │ │
│ │                               │   │   type='GEO',                        │ │
│ │                               │   │   description='Genomics is a field   │ │
│ │                               of study that involves the analysis of     │ │
│ │                               genetic data',                             │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['2', '5'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'bcfc6a23d78c876f7cc226f911e6ce8375526d89… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='23e90035-1c2a-4f7c-b3a5-2ce40e787b99', │ │
│ │                               │   │   short_id='62',                     │ │
│ │                               │   │   title='GPU',                       │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='GPU is a type of      │ │
│ │                               hardware used for training Convolutional   │ │
│ │                               Neural Networks',                          │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['2', '5'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'bcfc6a23d78c876f7cc226f911e6ce8375526d89… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='241d8560-db2f-4b6a-b684-e1f6c0199807', │ │
│ │                               │   │   short_id='6',                      │ │
│ │                               │   │   title='FINANCIAL SERVICES',        │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='Financial services    │ │
│ │                               use machine learning for fraud detection,  │ │
│ │                               credit scoring, and'+20,                   │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['3', '7'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='2ce4d55d-3f44-44d8-aa8c-8fb1478f6d89', │ │
│ │                               │   │   short_id='63',                     │ │
│ │                               │   │   title='TPU',                       │ │
│ │                               │   │   type='ORGANIZATION',               │ │
│ │                               │   │   description='TPU is a type of      │ │
│ │                               hardware used for training Convolutional   │ │
│ │                               Neural Networks',                          │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['2', '5'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'bcfc6a23d78c876f7cc226f911e6ce8375526d89… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   Entity(                                │ │
│ │                               │   │                                      │ │
│ │                               id='33dce321-f4d6-451b-93a0-facff7bd4cfc', │ │
│ │                               │   │   short_id='2',                      │ │
│ │                               │   │   title='SUPERVISED LEARNING',       │ │
│ │                               │   │   type='EVENT',                      │ │
│ │                               │   │   description='Supervised learning   │ │
│ │                               involves training a model on a labeled     │ │
│ │                               dataset to perform ta'+38,                 │ │
│ │                               │   │   description_embedding=None,        │ │
│ │                               │   │   name_embedding=None,               │ │
│ │                               │   │   community_ids=['3', '7'],          │ │
│ │                               │   │   text_unit_ids=[                    │ │
│ │                               │   │   │                                  │ │
│ │                               'e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               │   │   ],                                 │ │
│ │                               │   │   rank=1,                            │ │
│ │                               │   │   attributes=None                    │ │
│ │                               │   ),                                     │ │
│ │                               │   ... +68                                │ │
│ │                               ]                                          │ │
│ │                       index = 'output'                                   │ │
│ │                       nodes = │   │   │   │   │   │   │   │   │      id  │ │
│ │                               human_readable_id  ...  x  y               │ │
│ │                               0    361d38e8-a81c-43bf-a292-0cf59164fcfe  │ │
│ │                               0  ...  0  0                               │ │
│ │                               1    361d38e8-a81c-43bf-a292-0cf59164fcfe  │ │
│ │                               0  ...  0  0                               │ │
│ │                               2    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d  │ │
│ │                               1  ...  0  0                               │ │
│ │                               3    5a3fa688-2b88-4184-b7bf-0dafb6d6fe0d  │ │
│ │                               1  ...  0  0                               │ │
│ │                               4    33dce321-f4d6-451b-93a0-facff7bd4cfc  │ │
│ │                               2  ...  0  0                               │ │
│ │                               ..                                    ...  │ │
│ │                               ...  ... .. ..                             │ │
│ │                               113  8578ccd8-76f7-4dd5-aefc-e9502499d5ee  │ │
│ │                               73  ...  0  0                              │ │
│ │                               114  73903f34-7e8a-41c4-853e-b43359f25b82  │ │
│ │                               74  ...  0  0                              │ │
│ │                               115  ba65496d-ddb1-4d08-a203-4691b4c7cc65  │ │
│ │                               75  ...  0  0                              │ │
│ │                               116  b20370ae-854f-4781-b6e9-564adb5e75bb  │ │
│ │                               76  ...  0  0                              │ │
│ │                               117  f3b34144-c8b6-4780-aee2-2ff729c2f05c  │ │
│ │                               77  ...  0  0                              │ │
│ │                                                                          │ │
│ │                               [118 rows x 8 columns]                     │ │
│ │                      prompt = '\n---Role---\n\nYou are a helpful         │ │
│ │                               assistant responding to questions about    │ │
│ │                               data in t'+2471                            │ │
│ │                       query = "What's the difference between CNN and     │ │
│ │                               GNN? Concluse the pros and cons."          │ │
│ │               relationships = │   │   │   │   │   │   │   │   │     id   │ │
│ │                               ...                                        │ │
│ │                               text_unit_ids                              │ │
│ │                               0   30bda342-2449-47b2-ad1d-01db21aeafe3   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               1   b1d6d5ae-3b60-4297-9642-a721f9c2fb8c   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               2   f3089407-a992-4bf2-bf54-a9ce82eddd82   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               3   b1ada996-01bd-41fa-9c5e-9023b0e4651e   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               4   596f1d62-9cdd-4aa2-8d11-0cbe2cae39e3   │ │
│ │                               ...                                        │ │
│ │                               [e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce… │ │
│ │                               ..                                   ...   │ │
│ │                               ...                                        │ │
│ │                               ...                                        │ │
│ │                               81  165ef284-3ac5-4b2c-82eb-5edddb988f48   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               82  ddc4b38f-59cc-4982-85e3-88d9fbaa06a5   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               83  c08d0886-947f-4923-91cc-92c29dfd4208   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               84  2b3f689d-a803-4a03-a775-71d6eb93c5c7   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                               85  33d7767e-e7be-42ac-8d4d-4b750cb07e9d   │ │
│ │                               ...                                        │ │
│ │                               [332527ce3f7779776fcfae343ec912a32806bb50… │ │
│ │                                                                          │ │
│ │                               [86 rows x 8 columns]                      │ │
│ │               response_type = 'Multiple Paragraphs'                      │ │
│ │               search_engine = <graphrag.query.structured_search.local_s… │ │
│ │                               object at 0x1513e5e76e10>                  │ │
│ │                       store = VectorStoreConfig(                         │ │
│ │                               │   type='lancedb',                        │ │
│ │                               │                                          │ │
│ │                               db_uri='/scratch/gpfs/jx0800/data/graphra… │ │
│ │                               │   url=None,                              │ │
│ │                               │   api_key=None,                          │ │
│ │                               │   audience=None,                         │ │
│ │                               │   container_name='default',              │ │
│ │                               │   database_name=None,                    │ │
│ │                               │   overwrite=True                         │ │
│ │                               )                                          │ │
│ │                  text_units = │   │   │   │   │   │   │   │   │   │   │  │ │
│ │                               │     id  ...                              │ │
│ │                               relationship_ids                           │ │
│ │                               0                                          │ │
│ │                               e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce4… │ │
│ │                               ...                                        │ │
│ │                               [30bda342-2449-47b2-ad1d-01db21aeafe3,     │ │
│ │                               b1d6d5a...                                 │ │
│ │                               1                                          │ │
│ │                               826236e9b53b61f612c6be568d84689b52b02eaab… │ │
│ │                               ...                                        │ │
│ │                               [4afb894f-4bbb-40f1-8611-670ef3325b4f,     │ │
│ │                               2551005...                                 │ │
│ │                               2                                          │ │
│ │                               bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                               ...                                        │ │
│ │                               [7c8977e4-ad87-4db9-b790-edfd3bd9dd3a,     │ │
│ │                               224194a...                                 │ │
│ │                               3                                          │ │
│ │                               332527ce3f7779776fcfae343ec912a32806bb50e… │ │
│ │                               ...                                        │ │
│ │                               [aa46818b-6b8a-43ec-8e63-2a29b0a1fbc0,     │ │
│ │                               3c85ae8...                                 │ │
│ │                                                                          │ │
│ │                               [4 rows x 7 columns]                       │ │
│ │           vector_store_args = {                                          │ │
│ │                               │   'output': {                            │ │
│ │                               │   │   'type': 'lancedb',                 │ │
│ │                               │   │   'db_uri':                          │ │
│ │                               '/scratch/gpfs/jx0800/data/graphrag/outpu… │ │
│ │                               │   │   'url': None,                       │ │
│ │                               │   │   'api_key': None,                   │ │
│ │                               │   │   'audience': None,                  │ │
│ │                               │   │   'container_name': 'default',       │ │
│ │                               │   │   'database_name': None,             │ │
│ │                               │   │   'overwrite': True                  │ │
│ │                               │   }                                      │ │
│ │                               }                                          │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/query/structured_search/local_search/search.p │
│ y:67 in asearch                                                              │
│                                                                              │
│    64 │   │   start_time = time.time()                                       │
│    65 │   │   search_prompt = ""                                             │
│    66 │   │   llm_calls, prompt_tokens, output_tokens = {}, {}, {}           │
│ ❱  67 │   │   context_result = self.context_builder.build_context(           │
│    68 │   │   │   query=query,                                               │
│    69 │   │   │   conversation_history=conversation_history,                 │
│    70 │   │   │   **kwargs,                                                  │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ conversation_history = None                                              │ │
│ │               kwargs = {}                                                │ │
│ │            llm_calls = {}                                                │ │
│ │        output_tokens = {}                                                │ │
│ │        prompt_tokens = {}                                                │ │
│ │                query = "What's the difference between CNN and GNN?       │ │
│ │                        Concluse the pros and cons."                      │ │
│ │        search_prompt = ''                                                │ │
│ │                 self = <graphrag.query.structured_search.local_search.s… │ │
│ │                        object at 0x1513e5e76e10>                         │ │
│ │           start_time = 1739005311.1365092                                │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/query/structured_search/local_search/mixed_co │
│ ntext.py:139 in build_context                                                │
│                                                                              │
│   136 │   │   │   )                                                          │
│   137 │   │   │   query = f"{query}\n{pre_user_questions}"                   │
│   138 │   │                                                                  │
│ ❱ 139 │   │   selected_entities = map_query_to_entities(                     │
│   140 │   │   │   query=query,                                               │
│   141 │   │   │   text_embedding_vectorstore=self.entity_text_embeddings,    │
│   142 │   │   │   text_embedder=self.text_embedder,                          │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │                  column_delimiter = '|'                                  │ │
│ │            community_context_name = 'Reports'                            │ │
│ │                    community_prop = 0.15                                 │ │
│ │              conversation_history = None                                 │ │
│ │    conversation_history_max_turns = 5                                    │ │
│ │ conversation_history_user_turns_on… True                                 │ │
│ │                                   =                                      │ │
│ │              exclude_entity_names = []                                   │ │
│ │            include_community_rank = False                                │ │
│ │              include_entity_names = []                                   │ │
│ │               include_entity_rank = True                                 │ │
│ │       include_relationship_weight = True                                 │ │
│ │                            kwargs = {                                    │ │
│ │                                     │   'embedding_vectorstore_key':     │ │
│ │                                     <EntityVectorStoreKey.ID: 'id'>      │ │
│ │                                     }                                    │ │
│ │                        max_tokens = 20000                                │ │
│ │                min_community_rank = 0                                    │ │
│ │                             query = "What's the difference between CNN   │ │
│ │                                     and GNN? Concluse the pros and       │ │
│ │                                     cons."                               │ │
│ │                  rank_description = 'number of relationships'            │ │
│ │    relationship_ranking_attribute = 'rank'                               │ │
│ │          return_candidate_context = False                                │ │
│ │                              self = <graphrag.query.structured_search.l… │ │
│ │                                     object at 0x1513e6a98050>            │ │
│ │                    text_unit_prop = 0.5                                  │ │
│ │             top_k_mapped_entities = 10                                   │ │
│ │               top_k_relationships = 10                                   │ │
│ │             use_community_summary = False                                │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/query/context_builder/entity_extraction.py:58 │
│ in map_query_to_entities                                                     │
│                                                                              │
│    55 │   if query != "":                                                    │
│    56 │   │   # get entities with highest semantic similarity to query       │
│    57 │   │   # oversample to account for excluded entities                  │
│ ❱  58 │   │   search_results = text_embedding_vectorstore.similarity_search_ │
│    59 │   │   │   text=query,                                                │
│    60 │   │   │   text_embedder=lambda t: text_embedder.embed(t),            │
│    61 │   │   │   k=k * oversample_scaler,                                   │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │               all_entities = [                                           │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='05e2a376-1b86-4c7d-8188-f0ba77ff466e',  │ │
│ │                              │   │   short_id='72',                      │ │
│ │                              │   │   title='LINFORMER',                  │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Linformer is a model   │ │
│ │                              that aims to make transformer neural        │ │
│ │                              networks more efficien'+1,                  │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['1'],                │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              '332527ce3f7779776fcfae343ec912a32806bb50e… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='06664b5c-6528-43af-ac46-d3374d70c762',  │ │
│ │                              │   │   short_id='38',                      │ │
│ │                              │   │   title='SEARCH ENGINES',             │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Search engines are a   │ │
│ │                              type of application that benefit from Graph │ │
│ │                              Neural Networks'+64,                        │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['4'],                │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              '826236e9b53b61f612c6be568d84689b52b02eaab… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='093d68c5-5d78-42b6-929c-a086b45c8269',  │ │
│ │                              │   │   short_id='49',                      │ │
│ │                              │   │   title='RESNET',                     │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='ResNet is a            │ │
│ │                              convolutional neural network model that     │ │
│ │                              achieved state-of-the-art pe'+48,           │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='1090b294-ea12-4b0d-9790-dfbb7ced303f',  │ │
│ │                              │   │   short_id='50',                      │ │
│ │                              │   │   title='YOLO',                       │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='YOLO is an object      │ │
│ │                              detection framework that leverages          │ │
│ │                              Convolutional Neural Networ'+49,            │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='20b2e048-f4d4-4fb5-9a3b-304e0681967c',  │ │
│ │                              │   │   short_id='30',                      │ │
│ │                              │   │   title='CONVOLUTIONAL NEURAL         │ │
│ │                              NETWORKS',                                  │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Convolutional Neural   │ │
│ │                              Networks are a type of neural network       │ │
│ │                              designed for processi'+483,                 │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              '826236e9b53b61f612c6be568d84689b52b02eaab… │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=22,                            │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='21e8a915-d1a5-4c21-a67d-423ab9e9a7c6',  │ │
│ │                              │   │   short_id='57',                      │ │
│ │                              │   │   title='GENOMICS',                   │ │
│ │                              │   │   type='GEO',                         │ │
│ │                              │   │   description='Genomics is a field of │ │
│ │                              study that involves the analysis of genetic │ │
│ │                              data',                                      │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='23e90035-1c2a-4f7c-b3a5-2ce40e787b99',  │ │
│ │                              │   │   short_id='62',                      │ │
│ │                              │   │   title='GPU',                        │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='GPU is a type of       │ │
│ │                              hardware used for training Convolutional    │ │
│ │                              Neural Networks',                           │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='241d8560-db2f-4b6a-b684-e1f6c0199807',  │ │
│ │                              │   │   short_id='6',                       │ │
│ │                              │   │   title='FINANCIAL SERVICES',         │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Financial services use │ │
│ │                              machine learning for fraud detection,       │ │
│ │                              credit scoring, and'+20,                    │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['3', '7'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce4… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='2ce4d55d-3f44-44d8-aa8c-8fb1478f6d89',  │ │
│ │                              │   │   short_id='63',                      │ │
│ │                              │   │   title='TPU',                        │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='TPU is a type of       │ │
│ │                              hardware used for training Convolutional    │ │
│ │                              Neural Networks',                           │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   Entity(                                 │ │
│ │                              │   │                                       │ │
│ │                              id='33dce321-f4d6-451b-93a0-facff7bd4cfc',  │ │
│ │                              │   │   short_id='2',                       │ │
│ │                              │   │   title='SUPERVISED LEARNING',        │ │
│ │                              │   │   type='EVENT',                       │ │
│ │                              │   │   description='Supervised learning    │ │
│ │                              involves training a model on a labeled      │ │
│ │                              dataset to perform ta'+38,                  │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['3', '7'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce4… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   ... +68                                 │ │
│ │                              ]                                           │ │
│ │          all_entities_dict = {                                           │ │
│ │                              │   '05e2a376-1b86-4c7d-8188-f0ba77ff466e': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='05e2a376-1b86-4c7d-8188-f0ba77ff466e',  │ │
│ │                              │   │   short_id='72',                      │ │
│ │                              │   │   title='LINFORMER',                  │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Linformer is a model   │ │
│ │                              that aims to make transformer neural        │ │
│ │                              networks more efficien'+1,                  │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['1'],                │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              '332527ce3f7779776fcfae343ec912a32806bb50e… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '06664b5c-6528-43af-ac46-d3374d70c762': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='06664b5c-6528-43af-ac46-d3374d70c762',  │ │
│ │                              │   │   short_id='38',                      │ │
│ │                              │   │   title='SEARCH ENGINES',             │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Search engines are a   │ │
│ │                              type of application that benefit from Graph │ │
│ │                              Neural Networks'+64,                        │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['4'],                │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              '826236e9b53b61f612c6be568d84689b52b02eaab… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '093d68c5-5d78-42b6-929c-a086b45c8269': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='093d68c5-5d78-42b6-929c-a086b45c8269',  │ │
│ │                              │   │   short_id='49',                      │ │
│ │                              │   │   title='RESNET',                     │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='ResNet is a            │ │
│ │                              convolutional neural network model that     │ │
│ │                              achieved state-of-the-art pe'+48,           │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '1090b294-ea12-4b0d-9790-dfbb7ced303f': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='1090b294-ea12-4b0d-9790-dfbb7ced303f',  │ │
│ │                              │   │   short_id='50',                      │ │
│ │                              │   │   title='YOLO',                       │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='YOLO is an object      │ │
│ │                              detection framework that leverages          │ │
│ │                              Convolutional Neural Networ'+49,            │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '20b2e048-f4d4-4fb5-9a3b-304e0681967c': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='20b2e048-f4d4-4fb5-9a3b-304e0681967c',  │ │
│ │                              │   │   short_id='30',                      │ │
│ │                              │   │   title='CONVOLUTIONAL NEURAL         │ │
│ │                              NETWORKS',                                  │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Convolutional Neural   │ │
│ │                              Networks are a type of neural network       │ │
│ │                              designed for processi'+483,                 │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              '826236e9b53b61f612c6be568d84689b52b02eaab… │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=22,                            │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '21e8a915-d1a5-4c21-a67d-423ab9e9a7c6': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='21e8a915-d1a5-4c21-a67d-423ab9e9a7c6',  │ │
│ │                              │   │   short_id='57',                      │ │
│ │                              │   │   title='GENOMICS',                   │ │
│ │                              │   │   type='GEO',                         │ │
│ │                              │   │   description='Genomics is a field of │ │
│ │                              study that involves the analysis of genetic │ │
│ │                              data',                                      │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '23e90035-1c2a-4f7c-b3a5-2ce40e787b99': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='23e90035-1c2a-4f7c-b3a5-2ce40e787b99',  │ │
│ │                              │   │   short_id='62',                      │ │
│ │                              │   │   title='GPU',                        │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='GPU is a type of       │ │
│ │                              hardware used for training Convolutional    │ │
│ │                              Neural Networks',                           │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '241d8560-db2f-4b6a-b684-e1f6c0199807': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='241d8560-db2f-4b6a-b684-e1f6c0199807',  │ │
│ │                              │   │   short_id='6',                       │ │
│ │                              │   │   title='FINANCIAL SERVICES',         │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='Financial services use │ │
│ │                              machine learning for fraud detection,       │ │
│ │                              credit scoring, and'+20,                    │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['3', '7'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce4… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '2ce4d55d-3f44-44d8-aa8c-8fb1478f6d89': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='2ce4d55d-3f44-44d8-aa8c-8fb1478f6d89',  │ │
│ │                              │   │   short_id='63',                      │ │
│ │                              │   │   title='TPU',                        │ │
│ │                              │   │   type='ORGANIZATION',                │ │
│ │                              │   │   description='TPU is a type of       │ │
│ │                              hardware used for training Convolutional    │ │
│ │                              Neural Networks',                           │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['2', '5'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'bcfc6a23d78c876f7cc226f911e6ce8375526d890… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   '33dce321-f4d6-451b-93a0-facff7bd4cfc': │ │
│ │                              Entity(                                     │ │
│ │                              │   │                                       │ │
│ │                              id='33dce321-f4d6-451b-93a0-facff7bd4cfc',  │ │
│ │                              │   │   short_id='2',                       │ │
│ │                              │   │   title='SUPERVISED LEARNING',        │ │
│ │                              │   │   type='EVENT',                       │ │
│ │                              │   │   description='Supervised learning    │ │
│ │                              involves training a model on a labeled      │ │
│ │                              dataset to perform ta'+38,                  │ │
│ │                              │   │   description_embedding=None,         │ │
│ │                              │   │   name_embedding=None,                │ │
│ │                              │   │   community_ids=['3', '7'],           │ │
│ │                              │   │   text_unit_ids=[                     │ │
│ │                              │   │   │                                   │ │
│ │                              'e72fce0bdeb62991ec38c3b6cf3aa675f8eabcce4… │ │
│ │                              │   │   ],                                  │ │
│ │                              │   │   rank=1,                             │ │
│ │                              │   │   attributes=None                     │ │
│ │                              │   ),                                      │ │
│ │                              │   ... +68                                 │ │
│ │                              }                                           │ │
│ │  embedding_vectorstore_key = <EntityVectorStoreKey.ID: 'id'>             │ │
│ │       exclude_entity_names = []                                          │ │
│ │       include_entity_names = []                                          │ │
│ │                          k = 10                                          │ │
│ │           matched_entities = []                                          │ │
│ │          oversample_scaler = 2                                           │ │
│ │                      query = "What's the difference between CNN and GNN? │ │
│ │                              Concluse the pros and cons."                │ │
│ │              text_embedder = <graphrag.query.llm.oai.embedding.OpenAIEm… │ │
│ │                              object at 0x1513e7491a90>                   │ │
│ │ text_embedding_vectorstore = <graphrag.vector_stores.lancedb.LanceDBVec… │ │
│ │                              object at 0x1513e6b179d0>                   │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/vector_stores/lancedb.py:134 in               │
│ similarity_search_by_text                                                    │
│                                                                              │
│   131 │   │   self, text: str, text_embedder: TextEmbedder, k: int = 10, **k │
│   132 │   ) -> list[VectorStoreSearchResult]:                                │
│   133 │   │   """Perform a similarity search using a given input text."""    │
│ ❱ 134 │   │   query_embedding = text_embedder(text)                          │
│   135 │   │   if query_embedding:                                            │
│   136 │   │   │   return self.similarity_search_by_vector(query_embedding, k │
│   137 │   │   return []                                                      │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │      k = 20                                                              │ │
│ │ kwargs = {}                                                              │ │
│ │   self = <graphrag.vector_stores.lancedb.LanceDBVectorStore object at    │ │
│ │          0x1513e6b179d0>                                                 │ │
│ │   text = "What's the difference between CNN and GNN? Concluse the pros   │ │
│ │          and cons."                                                      │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/query/context_builder/entity_extraction.py:60 │
│ in <lambda>                                                                  │
│                                                                              │
│    57 │   │   # oversample to account for excluded entities                  │
│    58 │   │   search_results = text_embedding_vectorstore.similarity_search_ │
│    59 │   │   │   text=query,                                                │
│ ❱  60 │   │   │   text_embedder=lambda t: text_embedder.embed(t),            │
│    61 │   │   │   k=k * oversample_scaler,                                   │
│    62 │   │   )                                                              │
│    63 │   │   for result in search_results:                                  │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │             t = "What's the difference between CNN and GNN? Concluse the │ │
│ │                 pros and cons."                                          │ │
│ │ text_embedder = <graphrag.query.llm.oai.embedding.OpenAIEmbedding object │ │
│ │                 at 0x1513e7491a90>                                       │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/query/llm/oai/embedding.py:85 in embed        │
│                                                                              │
│    82 │   │   chunk_embeddings = []                                          │
│    83 │   │   chunk_lens = []                                                │
│    84 │   │   for chunk in token_chunks:                                     │
│ ❱  85 │   │   │   embedding, chunk_len = self._embed_with_retry(chunk, **kwa │
│    86 │   │   │   print(f"embedding: {embedding}")                           │
│    87 │   │   │   print(f"chunk_len: {chunk_len}")                           │
│    88 │   │   │   try:                                                       │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │            chunk = "What's the difference between CNN and GNN? Concluse  │ │
│ │                    the pros and cons."                                   │ │
│ │ chunk_embeddings = []                                                    │ │
│ │       chunk_lens = []                                                    │ │
│ │           kwargs = {}                                                    │ │
│ │             self = <graphrag.query.llm.oai.embedding.OpenAIEmbedding     │ │
│ │                    object at 0x1513e7491a90>                             │ │
│ │             text = "What's the difference between CNN and GNN? Concluse  │ │
│ │                    the pros and cons."                                   │ │
│ │     token_chunks = <generator object chunk_text at 0x1513e40e2740>       │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/graphrag/graphrag/query/llm/oai/embedding.py:128 in             │
│ _embed_with_retry                                                            │
│                                                                              │
│   125 │   def _embed_with_retry(                                             │
│   126 │   │   self, text: str | tuple, **kwargs: Any                         │
│   127 │   ) -> tuple[list[float], int]:                                      │
│ ❱ 128 │   │   embedding = self.sync_client.embeddings.create(  # type: ignor │
│   129 │   │   │   │   │   │   │   input=text,                                │
│   130 │   │   │   │   │   │   │   model=self.model,                          │
│   131 │   │   │   │   │   │   │   **kwargs,  # type: ignore                  │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ kwargs = {}                                                              │ │
│ │   self = <graphrag.query.llm.oai.embedding.OpenAIEmbedding object at     │ │
│ │          0x1513e7491a90>                                                 │ │
│ │   text = "What's the difference between CNN and GNN? Concluse the pros   │ │
│ │          and cons."                                                      │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/resour │
│ ces/embeddings.py:124 in create                                              │
│                                                                              │
│   121 │   │   │                                                              │
│   122 │   │   │   return obj                                                 │
│   123 │   │                                                                  │
│ ❱ 124 │   │   return self._post(                                             │
│   125 │   │   │   "/embeddings",                                             │
│   126 │   │   │   body=maybe_transform(params, embedding_create_params.Embed │
│   127 │   │   │   options=make_request_options(                              │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │      dimensions = NOT_GIVEN                                              │ │
│ │ encoding_format = NOT_GIVEN                                              │ │
│ │      extra_body = None                                                   │ │
│ │   extra_headers = None                                                   │ │
│ │     extra_query = None                                                   │ │
│ │           input = "What's the difference between CNN and GNN? Concluse   │ │
│ │                   the pros and cons."                                    │ │
│ │           model = 'nomic-embed-text'                                     │ │
│ │          params = {                                                      │ │
│ │                   │   'input': "What's the difference between CNN and    │ │
│ │                   GNN? Concluse the pros and cons.",                     │ │
│ │                   │   'model': 'nomic-embed-text',                       │ │
│ │                   │   'user': NOT_GIVEN,                                 │ │
│ │                   │   'dimensions': NOT_GIVEN,                           │ │
│ │                   │   'encoding_format': 'base64'                        │ │
│ │                   }                                                      │ │
│ │            self = <openai.resources.embeddings.Embeddings object at      │ │
│ │                   0x1513e40d4a50>                                        │ │
│ │         timeout = NOT_GIVEN                                              │ │
│ │            user = NOT_GIVEN                                              │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/_base_ │
│ client.py:1280 in post                                                       │
│                                                                              │
│   1277 │   │   opts = FinalRequestOptions.construct(                         │
│   1278 │   │   │   method="post", url=path, json_data=body, files=to_httpx_f │
│   1279 │   │   )                                                             │
│ ❱ 1280 │   │   return cast(ResponseT, self.request(cast_to, opts, stream=str │
│   1281 │                                                                     │
│   1282 │   def patch(                                                        │
│   1283 │   │   self,                                                         │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │       body = {                                                           │ │
│ │              │   'input': "What's the difference between CNN and GNN?    │ │
│ │              Concluse the pros and cons.",                               │ │
│ │              │   'model': 'nomic-embed-text',                            │ │
│ │              │   'user': NOT_GIVEN,                                      │ │
│ │              │   'dimensions': NOT_GIVEN,                                │ │
│ │              │   'encoding_format': 'base64'                             │ │
│ │              }                                                           │ │
│ │      files = None                                                        │ │
│ │    options = {                                                           │ │
│ │              │   'post_parser': <function                                │ │
│ │              Embeddings.create.<locals>.parser at 0x1513ae9c8360>        │ │
│ │              }                                                           │ │
│ │       opts = FinalRequestOptions(                                        │ │
│ │              │   method='post',                                          │ │
│ │              │   url='/embeddings',                                      │ │
│ │              │   params={},                                              │ │
│ │              │   headers=NOT_GIVEN,                                      │ │
│ │              │   max_retries=NOT_GIVEN,                                  │ │
│ │              │   timeout=NOT_GIVEN,                                      │ │
│ │              │   files=None,                                             │ │
│ │              │   idempotency_key=None,                                   │ │
│ │              │   post_parser=<function Embeddings.create.<locals>.parser │ │
│ │              at 0x1513ae9c8360>,                                         │ │
│ │              │   json_data={                                             │ │
│ │              │   │   'input': "What's the difference between CNN and     │ │
│ │              GNN? Concluse the pros and cons.",                          │ │
│ │              │   │   'model': 'nomic-embed-text',                        │ │
│ │              │   │   'encoding_format': 'base64'                         │ │
│ │              │   },                                                      │ │
│ │              │   extra_json=None                                         │ │
│ │              )                                                           │ │
│ │       path = '/embeddings'                                               │ │
│ │       self = <openai.OpenAI object at 0x1513e7024050>                    │ │
│ │     stream = False                                                       │ │
│ │ stream_cls = None                                                        │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/_base_ │
│ client.py:957 in request                                                     │
│                                                                              │
│    954 │   │   else:                                                         │
│    955 │   │   │   retries_taken = 0                                         │
│    956 │   │                                                                 │
│ ❱  957 │   │   return self._request(                                         │
│    958 │   │   │   cast_to=cast_to,                                          │
│    959 │   │   │   options=options,                                          │
│    960 │   │   │   stream=stream,                                            │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │           options = FinalRequestOptions(                                 │ │
│ │                     │   method='post',                                   │ │
│ │                     │   url='/embeddings',                               │ │
│ │                     │   params={},                                       │ │
│ │                     │   headers=NOT_GIVEN,                               │ │
│ │                     │   max_retries=NOT_GIVEN,                           │ │
│ │                     │   timeout=NOT_GIVEN,                               │ │
│ │                     │   files=None,                                      │ │
│ │                     │   idempotency_key=None,                            │ │
│ │                     │   post_parser=<function                            │ │
│ │                     Embeddings.create.<locals>.parser at                 │ │
│ │                     0x1513ae9c8360>,                                     │ │
│ │                     │   json_data={                                      │ │
│ │                     │   │   'input': "What's the difference between CNN  │ │
│ │                     and GNN? Concluse the pros and cons.",               │ │
│ │                     │   │   'model': 'nomic-embed-text',                 │ │
│ │                     │   │   'encoding_format': 'base64'                  │ │
│ │                     │   },                                               │ │
│ │                     │   extra_json=None                                  │ │
│ │                     )                                                    │ │
│ │ remaining_retries = None                                                 │ │
│ │     retries_taken = 0                                                    │ │
│ │              self = <openai.OpenAI object at 0x1513e7024050>             │ │
│ │            stream = False                                                │ │
│ │        stream_cls = None                                                 │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/_base_ │
│ client.py:1063 in _request                                                   │
│                                                                              │
│   1060 │   │   │   log.debug("Re-raising status error")                      │
│   1061 │   │   │   raise self._make_status_error_from_response(err.response) │
│   1062 │   │                                                                 │
│ ❱ 1063 │   │   return self._process_response(                                │
│   1064 │   │   │   cast_to=cast_to,                                          │
│   1065 │   │   │   options=options,                                          │
│   1066 │   │   │   response=response,                                        │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │     input_options = FinalRequestOptions(                                 │ │
│ │                     │   method='post',                                   │ │
│ │                     │   url='/embeddings',                               │ │
│ │                     │   params={},                                       │ │
│ │                     │   headers=NOT_GIVEN,                               │ │
│ │                     │   max_retries=NOT_GIVEN,                           │ │
│ │                     │   timeout=NOT_GIVEN,                               │ │
│ │                     │   files=None,                                      │ │
│ │                     │   idempotency_key=None,                            │ │
│ │                     │   post_parser=<function                            │ │
│ │                     Embeddings.create.<locals>.parser at                 │ │
│ │                     0x1513ae9c8360>,                                     │ │
│ │                     │   json_data={                                      │ │
│ │                     │   │   'input': "What's the difference between CNN  │ │
│ │                     and GNN? Concluse the pros and cons.",               │ │
│ │                     │   │   'model': 'nomic-embed-text',                 │ │
│ │                     │   │   'encoding_format': 'base64'                  │ │
│ │                     │   },                                               │ │
│ │                     │   extra_json=None                                  │ │
│ │                     )                                                    │ │
│ │            kwargs = {}                                                   │ │
│ │           options = FinalRequestOptions(                                 │ │
│ │                     │   method='post',                                   │ │
│ │                     │   url='/embeddings',                               │ │
│ │                     │   params={},                                       │ │
│ │                     │   headers=NOT_GIVEN,                               │ │
│ │                     │   max_retries=NOT_GIVEN,                           │ │
│ │                     │   timeout=NOT_GIVEN,                               │ │
│ │                     │   files=None,                                      │ │
│ │                     │   idempotency_key=None,                            │ │
│ │                     │   post_parser=<function                            │ │
│ │                     Embeddings.create.<locals>.parser at                 │ │
│ │                     0x1513ae9c8360>,                                     │ │
│ │                     │   json_data={                                      │ │
│ │                     │   │   'input': "What's the difference between CNN  │ │
│ │                     and GNN? Concluse the pros and cons.",               │ │
│ │                     │   │   'model': 'nomic-embed-text',                 │ │
│ │                     │   │   'encoding_format': 'base64'                  │ │
│ │                     │   },                                               │ │
│ │                     │   extra_json=None                                  │ │
│ │                     )                                                    │ │
│ │ remaining_retries = 10                                                   │ │
│ │           request = <Request('POST',                                     │ │
│ │                     'http://localhost:11434/api/embeddings')>            │ │
│ │          response = <Response [200 OK]>                                  │ │
│ │     retries_taken = 0                                                    │ │
│ │              self = <openai.OpenAI object at 0x1513e7024050>             │ │
│ │            stream = False                                                │ │
│ │        stream_cls = None                                                 │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/_base_ │
│ client.py:1162 in _process_response                                          │
│                                                                              │
│   1159 │   │   if bool(response.request.headers.get(RAW_RESPONSE_HEADER)):   │
│   1160 │   │   │   return cast(ResponseT, api_response)                      │
│   1161 │   │                                                                 │
│ ❱ 1162 │   │   return api_response.parse()                                   │
│   1163 │                                                                     │
│   1164 │   def _request_api_list(                                            │
│   1165 │   │   self,                                                         │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │  api_response = <APIResponse [200 OK] type=<class                        │ │
│ │                 'openai.types.create_embedding_response.CreateEmbedding… │ │
│ │       options = FinalRequestOptions(                                     │ │
│ │                 │   method='post',                                       │ │
│ │                 │   url='/embeddings',                                   │ │
│ │                 │   params={},                                           │ │
│ │                 │   headers=NOT_GIVEN,                                   │ │
│ │                 │   max_retries=NOT_GIVEN,                               │ │
│ │                 │   timeout=NOT_GIVEN,                                   │ │
│ │                 │   files=None,                                          │ │
│ │                 │   idempotency_key=None,                                │ │
│ │                 │   post_parser=<function                                │ │
│ │                 Embeddings.create.<locals>.parser at 0x1513ae9c8360>,    │ │
│ │                 │   json_data={                                          │ │
│ │                 │   │   'input': "What's the difference between CNN and  │ │
│ │                 GNN? Concluse the pros and cons.",                       │ │
│ │                 │   │   'model': 'nomic-embed-text',                     │ │
│ │                 │   │   'encoding_format': 'base64'                      │ │
│ │                 │   },                                                   │ │
│ │                 │   extra_json=None                                      │ │
│ │                 )                                                        │ │
│ │      response = <Response [200 OK]>                                      │ │
│ │ retries_taken = 0                                                        │ │
│ │          self = <openai.OpenAI object at 0x1513e7024050>                 │ │
│ │        stream = False                                                    │ │
│ │    stream_cls = None                                                     │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/_respo │
│ nse.py:319 in parse                                                          │
│                                                                              │
│   316 │   │                                                                  │
│   317 │   │   parsed = self._parse(to=to)                                    │
│   318 │   │   if is_given(self._options.post_parser):                        │
│ ❱ 319 │   │   │   parsed = self._options.post_parser(parsed)                 │
│   320 │   │                                                                  │
│   321 │   │   if isinstance(parsed, BaseModel):                              │
│   322 │   │   │   add_request_id(parsed, self.request_id)                    │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ cached = None                                                            │ │
│ │ parsed = CreateEmbeddingResponse(                                        │ │
│ │          │   data=None,                                                  │ │
│ │          │   model=None,                                                 │ │
│ │          │   object=None,                                                │ │
│ │          │   usage=None,                                                 │ │
│ │          │   embedding=[]                                                │ │
│ │          )                                                               │ │
│ │   self = <APIResponse [200 OK] type=<class                               │ │
│ │          'openai.types.create_embedding_response.CreateEmbeddingRespons… │ │
│ │     to = None                                                            │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/jx0800/.conda/envs/graphrag/lib/python3.11/site-packages/openai/resour │
│ ces/embeddings.py:112 in parser                                              │
│                                                                              │
│   109 │   │   │   │   # don't modify the response object if a user explicitl │
│   110 │   │   │   │   return obj                                             │
│   111 │   │   │                                                              │
│ ❱ 112 │   │   │   for embedding in obj.data:                                 │
│   113 │   │   │   │   data = cast(object, embedding.embedding)               │
│   114 │   │   │   │   if not isinstance(data, str):                          │
│   115 │   │   │   │   │   # numpy is not installed / base64 optimisation isn │
│                                                                              │
│ ╭────────────────── locals ──────────────────╮                               │
│ │ encoding_format = NOT_GIVEN                │                               │
│ │             obj = CreateEmbeddingResponse( │                               │
│ │                   │   data=None,           │                               │
│ │                   │   model=None,          │                               │
│ │                   │   object=None,         │                               │
│ │                   │   usage=None,          │                               │
│ │                   │   embedding=[]         │                               │
│ │                   )                        │                               │
│ ╰────────────────────────────────────────────╯                               │
╰──────────────────────────────────────────────────────────────────────────────╯
TypeError: 'NoneType' object is not iterable
